{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0","program":"C:\\Users\\User\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfx_descriptor","--edition=2018","C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b3b41e8d4b342c82","-C","extra-filename=-b3b41e8d4b342c82","--out-dir","c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps","--extern","fxhash=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libfxhash-4692ec81aebf3be7.rmeta","--extern","hal=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libgfx_hal-044c040d05749504.rmeta","--extern","log=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\liblog-b24ec52e7794fe7a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\User\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libgfx_descriptor-b3b41e8d4b342c82.rmeta"},"prelude":{"crate_id":{"name":"gfx_descriptor","disambiguator":[17156370375572047690,15574177924526705487]},"crate_root":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src","external_crates":[{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","num":13,"id":{"name":"gfx_hal","disambiguator":[10132050729097171583,6166334663588284423]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","num":14,"id":{"name":"bitflags","disambiguator":[3061788739106617431,7195889896823621023]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","num":15,"id":{"name":"raw_window_handle","disambiguator":[4289325378692894514,298835581694581767]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","num":16,"id":{"name":"libc","disambiguator":[18318599667816562812,18408574817307136160]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","num":17,"id":{"name":"log","disambiguator":[2802017746556461242,15679450936213850979]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","num":18,"id":{"name":"cfg_if","disambiguator":[14278688539970073542,8934083179492313950]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","num":19,"id":{"name":"fxhash","disambiguator":[11631945985341822451,12377570788205499209]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","num":20,"id":{"name":"byteorder","disambiguator":[17846375290341452477,13224367376335600430]}}],"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","byte_start":0,"byte_end":69,"line_start":1,"line_end":4,"column_start":1,"column_end":42}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","byte_start":55,"byte_end":56,"line_start":4,"line_end":4,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","byte_start":66,"byte_end":67,"line_start":4,"line_end":4,"column_start":39,"column_end":40},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","byte_start":0,"byte_end":69,"line_start":1,"line_end":4,"column_start":1,"column_end":42},"name":"","qualname":"::","value":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":52},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":506,"byte_end":519,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"DescriptorSet","qualname":"::allocator::DescriptorSet","value":"DescriptorSet {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" Descriptor set from allocator.\n","sig":null,"attributes":[{"value":"/ Descriptor set from allocator.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":443,"byte_end":477,"line_start":19,"line_end":19,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":665,"byte_end":668,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"raw","qualname":"<DescriptorSet<B>>::raw","value":"pub fn raw(&Self) -> &B::DescriptorSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":6949,"byte_end":6968,"line_start":218,"line_end":218,"column_start":12,"column_end":31},"name":"DescriptorAllocator","qualname":"::allocator::DescriptorAllocator","value":"DescriptorAllocator {  }","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Descriptor allocator.\n Can be used to allocate descriptor sets for any layout.\n","sig":null,"attributes":[{"value":"/ Descriptor allocator.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":6835,"byte_end":6860,"line_start":215,"line_end":215,"column_start":1,"column_end":26}},{"value":"/ Can be used to allocate descriptor sets for any layout.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":6861,"byte_end":6920,"line_start":216,"line_end":216,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":7454,"byte_end":7457,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<DescriptorAllocator<B>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new allocator instance.\n","sig":null,"attributes":[{"value":"/ Create new allocator instance.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":7408,"byte_end":7442,"line_start":234,"line_end":234,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":7855,"byte_end":7860,"line_start":249,"line_end":249,"column_start":19,"column_end":24},"name":"clear","qualname":"<DescriptorAllocator<B>>::clear","value":"pub unsafe fn clear(&mut Self, &B::Device)","parent":null,"children":[],"decl_id":null,"docs":" Clear the allocator instance.\n All sets allocated from this allocator become invalid.\n","sig":null,"attributes":[{"value":"/ Clear the allocator instance.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":7740,"byte_end":7773,"line_start":247,"line_end":247,"column_start":5,"column_end":38}},{"value":"/ All sets allocated from this allocator become invalid.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":7778,"byte_end":7836,"line_start":248,"line_end":248,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":8289,"byte_end":8297,"line_start":261,"line_end":261,"column_start":19,"column_end":27},"name":"allocate","qualname":"<DescriptorAllocator<B>>::allocate","value":"pub unsafe fn allocate<impl Extend<DescriptorSet<B>>: Extend<DescriptorSet<B>>>(&mut Self,\n                                                                                &B::Device,\n                                                                                &B::DescriptorSetLayout,\n                                                                                &DescriptorCounts,\n                                                                                u32,\n                                                                                &mut impl Extend<DescriptorSet<B>>)\n-> Result<(), OutOfMemory>","parent":null,"children":[],"decl_id":null,"docs":" Allocate descriptor set with specified layout.\n `DescriptorCounts` must match descriptor numbers of the layout.\n `DescriptorCounts` can be constructed [from bindings] that were used\n to create layout instance.","sig":null,"attributes":[{"value":"/ Allocate descriptor set with specified layout.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":8001,"byte_end":8051,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/ `DescriptorCounts` must match descriptor numbers of the layout.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":8056,"byte_end":8123,"line_start":256,"line_end":256,"column_start":5,"column_end":72}},{"value":"/ `DescriptorCounts` can be constructed [from bindings] that were used","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":8128,"byte_end":8200,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/ to create layout instance.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":8205,"byte_end":8235,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":8240,"byte_end":8243,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [from bindings]: .","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":8248,"byte_end":8270,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":10519,"byte_end":10523,"line_start":327,"line_end":327,"column_start":19,"column_end":23},"name":"free","qualname":"<DescriptorAllocator<B>>::free","value":"pub unsafe fn free<impl IntoIterator<Item = DescriptorSet<B>>: IntoIterator<Item\n                   =\n                   DescriptorSet<B>>>(&mut Self,\n                                      impl IntoIterator<Item = DescriptorSet<B>>)","parent":null,"children":[],"decl_id":null,"docs":" Free descriptor sets.","sig":null,"attributes":[{"value":"/ Free descriptor sets.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":10252,"byte_end":10277,"line_start":320,"line_end":320,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":10282,"byte_end":10285,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":10290,"byte_end":10302,"line_start":322,"line_end":322,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":10307,"byte_end":10310,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ None of descriptor sets can be referenced in any pending command buffers.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":10315,"byte_end":10392,"line_start":324,"line_end":324,"column_start":5,"column_end":82}},{"value":"/ All command buffers where at least one of descriptor sets referenced","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":10397,"byte_end":10469,"line_start":325,"line_end":325,"column_start":5,"column_end":77}},{"value":"/ move to invalid state.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":10474,"byte_end":10500,"line_start":326,"line_end":326,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":11780,"byte_end":11787,"line_start":359,"line_end":359,"column_start":19,"column_end":26},"name":"cleanup","qualname":"<DescriptorAllocator<B>>::cleanup","value":"pub unsafe fn cleanup(&mut Self, &B::Device)","parent":null,"children":[],"decl_id":null,"docs":" Perform cleanup to allow resources reuse.\n","sig":null,"attributes":[{"value":"/ Perform cleanup to allow resources reuse.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":11716,"byte_end":11761,"line_start":358,"line_end":358,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17074,"byte_end":17090,"line_start":159,"line_end":159,"column_start":12,"column_end":28},"name":"DescriptorCounts","qualname":"::counts::DescriptorCounts","value":"DescriptorCounts {  }","parent":null,"children":[{"krate":0,"index":132}],"decl_id":null,"docs":" Number of descriptors per type.\n","sig":null,"attributes":[{"value":"/ Number of descriptors per type.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":16973,"byte_end":17008,"line_start":157,"line_end":157,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17207,"byte_end":17212,"line_start":165,"line_end":165,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::counts::DescriptorCounts::EMPTY","value":"Self","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Empty descriptor counts.\n","sig":null,"attributes":[{"value":"/ Empty descriptor counts.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17164,"byte_end":17192,"line_start":164,"line_end":164,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17401,"byte_end":17412,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"add_binding","qualname":"<DescriptorCounts>::add_binding","value":"pub fn add_binding(&mut Self, DescriptorSetLayoutBinding)","parent":null,"children":[],"decl_id":null,"docs":" Add a single layout binding.\n Useful when created with `DescriptorCounts::EMPTY`.\n","sig":null,"attributes":[{"value":"/ Add a single layout binding.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17297,"byte_end":17329,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"/ Useful when created with `DescriptorCounts::EMPTY`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17334,"byte_end":17389,"line_start":170,"line_end":170,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17636,"byte_end":17640,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"iter","qualname":"<DescriptorCounts>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate through counts yelding descriptor types and their amount.\n","sig":null,"attributes":[{"value":"/ Iterate through counts yelding descriptor types and their amount.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17555,"byte_end":17624,"line_start":175,"line_end":175,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":18024,"byte_end":18032,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"multiply","qualname":"<DescriptorCounts>::multiply","value":"pub fn multiply(&Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiply all the counts by a value.\n","sig":null,"attributes":[{"value":"/ Multiply all the counts by a value.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17973,"byte_end":18012,"line_start":187,"line_end":187,"column_start":5,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":635,"byte_end":648,"line_start":27,"line_end":27,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":855,"byte_end":865,"line_start":39,"line_end":39,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":2894,"byte_end":2910,"line_start":92,"line_end":92,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":7196,"byte_end":7215,"line_start":225,"line_end":225,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":7379,"byte_end":7398,"line_start":233,"line_end":233,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17144,"byte_end":17160,"line_start":163,"line_end":163,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":18251,"byte_end":18267,"line_start":197,"line_end":197,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":18571,"byte_end":18587,"line_start":211,"line_end":211,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":19143,"byte_end":19159,"line_start":227,"line_end":227,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":19332,"byte_end":19348,"line_start":235,"line_end":235,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":635,"byte_end":648,"line_start":27,"line_end":27,"column_start":18,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":855,"byte_end":865,"line_start":39,"line_end":39,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":2894,"byte_end":2910,"line_start":92,"line_end":92,"column_start":18,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":7196,"byte_end":7215,"line_start":225,"line_end":225,"column_start":27,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\allocator.rs","byte_start":7379,"byte_end":7398,"line_start":233,"line_end":233,"column_start":18,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":17144,"byte_end":17160,"line_start":163,"line_end":163,"column_start":6,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":18251,"byte_end":18267,"line_start":197,"line_end":197,"column_start":51,"column_end":67},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":18571,"byte_end":18587,"line_start":211,"line_end":211,"column_start":21,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":19143,"byte_end":19159,"line_start":227,"line_end":227,"column_start":20,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":2141}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-descriptor-0.1.0\\src\\counts.rs","byte_start":19332,"byte_end":19348,"line_start":235,"line_end":235,"column_start":20,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":2145}}]}