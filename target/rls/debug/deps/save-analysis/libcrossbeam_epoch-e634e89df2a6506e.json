{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1","program":"C:\\Users\\User\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","--edition=2018","C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=e634e89df2a6506e","-C","extra-filename=-e634e89df2a6506e","--out-dir","c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libcfg_if-45f25b97e0d5b71b.rmeta","--extern","const_fn=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\const_fn-0b980f8a226757fb.dll","--extern","crossbeam_utils=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libcrossbeam_utils-691c7e756cee5a7e.rmeta","--extern","lazy_static=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\liblazy_static-751c9fb625112ea5.rmeta","--extern","memoffset=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libmemoffset-1481f4996f626192.rmeta","--extern","scopeguard=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libscopeguard-25b478294c9dbe40.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\User\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libcrossbeam_epoch-e634e89df2a6506e.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[15050153079674503782,2268399906807933919]},"crate_root":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src","external_crates":[{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":13,"id":{"name":"cfg_if","disambiguator":[12397753863589609571,14658349722023367951]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","num":14,"id":{"name":"const_fn","disambiguator":[2993117588587900977,9841594660538739331]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","num":15,"id":{"name":"crossbeam_utils","disambiguator":[15607205542171645897,10928540300820900828]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","num":16,"id":{"name":"lazy_static","disambiguator":[2108853056651763308,9416867899167320082]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","num":17,"id":{"name":"scopeguard","disambiguator":[9918919416680813829,10059034963549450911]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","num":18,"id":{"name":"memoffset","disambiguator":[15036941482750379267,11328570828007316507]}}],"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3500,"byte_end":3509,"line_start":80,"line_end":80,"column_start":32,"column_end":41},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3511,"byte_end":3517,"line_start":80,"line_end":80,"column_start":43,"column_end":49},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3519,"byte_end":3537,"line_start":80,"line_end":80,"column_start":51,"column_end":69},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3539,"byte_end":3560,"line_start":80,"line_end":80,"column_start":71,"column_end":92},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3562,"byte_end":3567,"line_start":80,"line_end":80,"column_start":94,"column_end":99},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3569,"byte_end":3576,"line_start":80,"line_end":80,"column_start":101,"column_end":108},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3578,"byte_end":3584,"line_start":80,"line_end":80,"column_start":110,"column_end":116},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3621,"byte_end":3630,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3632,"byte_end":3643,"line_start":81,"line_end":81,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3676,"byte_end":3687,"line_start":82,"line_end":82,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3689,"byte_end":3694,"line_start":82,"line_end":82,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3802,"byte_end":3819,"line_start":89,"line_end":89,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3821,"byte_end":3830,"line_start":89,"line_end":89,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3832,"byte_end":3835,"line_start":89,"line_end":89,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":274},{"krate":0,"index":307},{"krate":0,"index":332},{"krate":0,"index":348},{"krate":0,"index":386},{"krate":0,"index":477},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":636},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2855,"byte_end":2926,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3120,"byte_end":3163,"line_start":63,"line_end":63,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7186582,"byte_end":7186600,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7186511,"byte_end":7186570,"line_start":28,"line_end":28,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7186730,"byte_end":7186737,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7186649,"byte_end":7186721,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7186823,"byte_end":7186826,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7186759,"byte_end":7186814,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187715,"byte_end":7187736,"line_start":57,"line_end":57,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187145,"byte_end":7187197,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187198,"byte_end":7187201,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187202,"byte_end":7187293,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187294,"byte_end":7187386,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187387,"byte_end":7187390,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187391,"byte_end":7187456,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187457,"byte_end":7187460,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187461,"byte_end":7187555,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187556,"byte_end":7187582,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187583,"byte_end":7187675,"line_start":55,"line_end":55,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187676,"byte_end":7187704,"line_start":56,"line_end":56,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187802,"byte_end":7187809,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187743,"byte_end":7187794,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7188027,"byte_end":7188034,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187835,"byte_end":7187883,"line_start":61,"line_end":61,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187888,"byte_end":7187891,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187896,"byte_end":7187989,"line_start":63,"line_end":63,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7187994,"byte_end":7188019,"line_start":64,"line_end":64,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190342,"byte_end":7190351,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189369,"byte_end":7189416,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189417,"byte_end":7189420,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189421,"byte_end":7189519,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189520,"byte_end":7189615,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189616,"byte_end":7189678,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189679,"byte_end":7189682,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189683,"byte_end":7189775,"line_start":124,"line_end":124,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189776,"byte_end":7189875,"line_start":125,"line_end":125,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189876,"byte_end":7189976,"line_start":126,"line_end":126,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7189977,"byte_end":7189999,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190000,"byte_end":7190003,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190004,"byte_end":7190097,"line_start":129,"line_end":129,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190098,"byte_end":7190169,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190170,"byte_end":7190173,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190174,"byte_end":7190181,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190182,"byte_end":7190212,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190213,"byte_end":7190244,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190245,"byte_end":7190248,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190249,"byte_end":7190323,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190324,"byte_end":7190331,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190398,"byte_end":7190403,"line_start":140,"line_end":140,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190358,"byte_end":7190387,"line_start":139,"line_end":139,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190457,"byte_end":7190461,"line_start":143,"line_end":143,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190417,"byte_end":7190447,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190613,"byte_end":7190617,"line_start":150,"line_end":150,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190468,"byte_end":7190513,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190518,"byte_end":7190521,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190526,"byte_end":7190538,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190543,"byte_end":7190546,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190551,"byte_end":7190598,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190981,"byte_end":7190986,"line_start":159,"line_end":159,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190651,"byte_end":7190686,"line_start":152,"line_end":152,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190691,"byte_end":7190694,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190699,"byte_end":7190711,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190716,"byte_end":7190719,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190724,"byte_end":7190800,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190805,"byte_end":7190873,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7190878,"byte_end":7190966,"line_start":158,"line_end":158,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191385,"byte_end":7191394,"line_start":169,"line_end":169,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191021,"byte_end":7191064,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191069,"byte_end":7191072,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191077,"byte_end":7191089,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191094,"byte_end":7191097,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191102,"byte_end":7191178,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191183,"byte_end":7191251,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191256,"byte_end":7191346,"line_start":167,"line_end":167,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191351,"byte_end":7191370,"line_start":168,"line_end":168,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191807,"byte_end":7191811,"line_start":179,"line_end":179,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191433,"byte_end":7191486,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191491,"byte_end":7191494,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191499,"byte_end":7191511,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191516,"byte_end":7191519,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191524,"byte_end":7191600,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191605,"byte_end":7191673,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191678,"byte_end":7191768,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191773,"byte_end":7191792,"line_start":178,"line_end":178,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194786,"byte_end":7194792,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194268,"byte_end":7194332,"line_start":266,"line_end":266,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194333,"byte_end":7194336,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194337,"byte_end":7194435,"line_start":268,"line_end":268,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194436,"byte_end":7194533,"line_start":269,"line_end":269,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194534,"byte_end":7194605,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194606,"byte_end":7194609,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194610,"byte_end":7194690,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194691,"byte_end":7194694,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194695,"byte_end":7194774,"line_start":274,"line_end":274,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195278,"byte_end":7195281,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195045,"byte_end":7195127,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195132,"byte_end":7195135,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195140,"byte_end":7195154,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195159,"byte_end":7195162,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195167,"byte_end":7195174,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195179,"byte_end":7195211,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195216,"byte_end":7195219,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195224,"byte_end":7195254,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195259,"byte_end":7195266,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195625,"byte_end":7195629,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195384,"byte_end":7195466,"line_start":299,"line_end":299,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195471,"byte_end":7195474,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195479,"byte_end":7195493,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195498,"byte_end":7195501,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195506,"byte_end":7195513,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195518,"byte_end":7195550,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195555,"byte_end":7195558,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195563,"byte_end":7195601,"line_start":306,"line_end":306,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195606,"byte_end":7195613,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196178,"byte_end":7196182,"line_start":331,"line_end":331,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196128,"byte_end":7196160,"line_start":330,"line_end":330,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196767,"byte_end":7196771,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196309,"byte_end":7196354,"line_start":338,"line_end":338,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196359,"byte_end":7196362,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196367,"byte_end":7196457,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196462,"byte_end":7196476,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196481,"byte_end":7196484,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196489,"byte_end":7196503,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196508,"byte_end":7196511,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196516,"byte_end":7196523,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196528,"byte_end":7196577,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196582,"byte_end":7196626,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196631,"byte_end":7196634,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196639,"byte_end":7196669,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196674,"byte_end":7196704,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196709,"byte_end":7196743,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196748,"byte_end":7196755,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197778,"byte_end":7197790,"line_start":378,"line_end":378,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196901,"byte_end":7196980,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196985,"byte_end":7196988,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7196993,"byte_end":7197066,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197071,"byte_end":7197147,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197152,"byte_end":7197223,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197228,"byte_end":7197302,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197307,"byte_end":7197330,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197335,"byte_end":7197338,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197343,"byte_end":7197418,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197423,"byte_end":7197497,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197502,"byte_end":7197536,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197541,"byte_end":7197544,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197549,"byte_end":7197563,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197568,"byte_end":7197571,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197576,"byte_end":7197583,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197588,"byte_end":7197637,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197642,"byte_end":7197645,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197650,"byte_end":7197680,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197685,"byte_end":7197715,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197720,"byte_end":7197754,"line_start":376,"line_end":376,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197759,"byte_end":7197766,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198398,"byte_end":7198403,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197910,"byte_end":7197975,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197980,"byte_end":7197983,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7197988,"byte_end":7198078,"line_start":384,"line_end":384,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198083,"byte_end":7198097,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198102,"byte_end":7198105,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198110,"byte_end":7198124,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198129,"byte_end":7198132,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198137,"byte_end":7198144,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198149,"byte_end":7198198,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198203,"byte_end":7198247,"line_start":391,"line_end":391,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198252,"byte_end":7198255,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198260,"byte_end":7198290,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198295,"byte_end":7198331,"line_start":394,"line_end":394,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198336,"byte_end":7198374,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198379,"byte_end":7198386,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199053,"byte_end":7199057,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198510,"byte_end":7198598,"line_start":401,"line_end":401,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198603,"byte_end":7198616,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198621,"byte_end":7198624,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198629,"byte_end":7198719,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198724,"byte_end":7198738,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198743,"byte_end":7198746,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198751,"byte_end":7198765,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198770,"byte_end":7198773,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198778,"byte_end":7198785,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198790,"byte_end":7198847,"line_start":410,"line_end":410,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198852,"byte_end":7198896,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198901,"byte_end":7198904,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198909,"byte_end":7198939,"line_start":413,"line_end":413,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198944,"byte_end":7198974,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7198979,"byte_end":7199029,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199034,"byte_end":7199041,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7200324,"byte_end":7200339,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199228,"byte_end":7199324,"line_start":421,"line_end":421,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199329,"byte_end":7199423,"line_start":422,"line_end":422,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199428,"byte_end":7199499,"line_start":423,"line_end":423,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199504,"byte_end":7199507,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199512,"byte_end":7199607,"line_start":425,"line_end":425,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199612,"byte_end":7199703,"line_start":426,"line_end":426,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199708,"byte_end":7199721,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199726,"byte_end":7199729,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199734,"byte_end":7199819,"line_start":429,"line_end":429,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199824,"byte_end":7199855,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199860,"byte_end":7199863,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199868,"byte_end":7199882,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199887,"byte_end":7199890,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199895,"byte_end":7199902,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199907,"byte_end":7199971,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7199976,"byte_end":7200020,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7200025,"byte_end":7200028,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7200033,"byte_end":7200063,"line_start":438,"line_end":438,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7200068,"byte_end":7200071,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7200076,"byte_end":7200106,"line_start":440,"line_end":440,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7200111,"byte_end":7200148,"line_start":441,"line_end":441,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7200153,"byte_end":7200223,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7200228,"byte_end":7200300,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7200305,"byte_end":7200312,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202808,"byte_end":7202828,"line_start":514,"line_end":514,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201008,"byte_end":7201104,"line_start":468,"line_end":468,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201109,"byte_end":7201203,"line_start":469,"line_end":469,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201208,"byte_end":7201279,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201284,"byte_end":7201287,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201292,"byte_end":7201386,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201391,"byte_end":7201486,"line_start":473,"line_end":473,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201491,"byte_end":7201581,"line_start":474,"line_end":474,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201586,"byte_end":7201670,"line_start":475,"line_end":475,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201675,"byte_end":7201678,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201683,"byte_end":7201768,"line_start":477,"line_end":477,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201773,"byte_end":7201804,"line_start":478,"line_end":478,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201809,"byte_end":7201812,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201817,"byte_end":7201865,"line_start":480,"line_end":480,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201870,"byte_end":7201873,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201878,"byte_end":7201892,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201897,"byte_end":7201900,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201905,"byte_end":7201912,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201917,"byte_end":7201981,"line_start":485,"line_end":485,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7201986,"byte_end":7202030,"line_start":486,"line_end":486,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202035,"byte_end":7202038,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202043,"byte_end":7202073,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202078,"byte_end":7202108,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202113,"byte_end":7202116,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202121,"byte_end":7202156,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202161,"byte_end":7202201,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202206,"byte_end":7202216,"line_start":493,"line_end":493,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202221,"byte_end":7202284,"line_start":494,"line_end":494,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202289,"byte_end":7202311,"line_start":495,"line_end":495,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202316,"byte_end":7202340,"line_start":496,"line_end":496,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202345,"byte_end":7202367,"line_start":497,"line_end":497,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202372,"byte_end":7202385,"line_start":498,"line_end":498,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202390,"byte_end":7202415,"line_start":499,"line_end":499,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202420,"byte_end":7202454,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202459,"byte_end":7202489,"line_start":501,"line_end":501,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202494,"byte_end":7202507,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202512,"byte_end":7202521,"line_start":503,"line_end":503,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202526,"byte_end":7202531,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202536,"byte_end":7202539,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202544,"byte_end":7202585,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202590,"byte_end":7202600,"line_start":507,"line_end":507,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202605,"byte_end":7202680,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202685,"byte_end":7202712,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202717,"byte_end":7202760,"line_start":510,"line_end":510,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202765,"byte_end":7202774,"line_start":511,"line_end":511,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202779,"byte_end":7202784,"line_start":512,"line_end":512,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7202789,"byte_end":7202796,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204233,"byte_end":7204242,"line_start":556,"line_end":556,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203502,"byte_end":7203541,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203546,"byte_end":7203549,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203554,"byte_end":7203648,"line_start":539,"line_end":539,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203653,"byte_end":7203709,"line_start":540,"line_end":540,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203714,"byte_end":7203717,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203722,"byte_end":7203812,"line_start":542,"line_end":542,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203817,"byte_end":7203831,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203836,"byte_end":7203839,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203844,"byte_end":7203858,"line_start":545,"line_end":545,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203863,"byte_end":7203866,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203871,"byte_end":7203878,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203883,"byte_end":7203940,"line_start":548,"line_end":548,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203945,"byte_end":7203989,"line_start":549,"line_end":549,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7203994,"byte_end":7203997,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204002,"byte_end":7204062,"line_start":551,"line_end":551,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204067,"byte_end":7204097,"line_start":552,"line_end":552,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204102,"byte_end":7204157,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204162,"byte_end":7204209,"line_start":554,"line_end":554,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204214,"byte_end":7204221,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205141,"byte_end":7205149,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204413,"byte_end":7204451,"line_start":560,"line_end":560,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204456,"byte_end":7204459,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204464,"byte_end":7204557,"line_start":562,"line_end":562,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204562,"byte_end":7204618,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204623,"byte_end":7204626,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204631,"byte_end":7204721,"line_start":565,"line_end":565,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204726,"byte_end":7204740,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204745,"byte_end":7204748,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204753,"byte_end":7204767,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204772,"byte_end":7204775,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204780,"byte_end":7204787,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204792,"byte_end":7204849,"line_start":571,"line_end":571,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204854,"byte_end":7204898,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204903,"byte_end":7204906,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204911,"byte_end":7204971,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7204976,"byte_end":7205006,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205011,"byte_end":7205065,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205070,"byte_end":7205117,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205122,"byte_end":7205129,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206049,"byte_end":7206058,"line_start":602,"line_end":602,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205318,"byte_end":7205357,"line_start":583,"line_end":583,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205362,"byte_end":7205365,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205370,"byte_end":7205464,"line_start":585,"line_end":585,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205469,"byte_end":7205525,"line_start":586,"line_end":586,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205530,"byte_end":7205533,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205538,"byte_end":7205628,"line_start":588,"line_end":588,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205633,"byte_end":7205647,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205652,"byte_end":7205655,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205660,"byte_end":7205674,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205679,"byte_end":7205682,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205687,"byte_end":7205694,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205699,"byte_end":7205756,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205761,"byte_end":7205805,"line_start":595,"line_end":595,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205810,"byte_end":7205813,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205818,"byte_end":7205878,"line_start":597,"line_end":597,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205883,"byte_end":7205913,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205918,"byte_end":7205973,"line_start":599,"line_end":599,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7205978,"byte_end":7206025,"line_start":600,"line_end":600,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206030,"byte_end":7206037,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207355,"byte_end":7207365,"line_start":640,"line_end":640,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206228,"byte_end":7206263,"line_start":606,"line_end":606,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206268,"byte_end":7206271,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206276,"byte_end":7206365,"line_start":608,"line_end":608,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206370,"byte_end":7206456,"line_start":609,"line_end":609,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206461,"byte_end":7206496,"line_start":610,"line_end":610,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206501,"byte_end":7206504,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206509,"byte_end":7206521,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206526,"byte_end":7206529,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206534,"byte_end":7206593,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206598,"byte_end":7206601,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206606,"byte_end":7206618,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206623,"byte_end":7206626,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206631,"byte_end":7206718,"line_start":618,"line_end":618,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206723,"byte_end":7206756,"line_start":619,"line_end":619,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206761,"byte_end":7206764,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206769,"byte_end":7206783,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206788,"byte_end":7206791,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206796,"byte_end":7206807,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206812,"byte_end":7206831,"line_start":624,"line_end":624,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206836,"byte_end":7206870,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206875,"byte_end":7206901,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206906,"byte_end":7206933,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206938,"byte_end":7206943,"line_start":628,"line_end":628,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206948,"byte_end":7206951,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206956,"byte_end":7206989,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7206994,"byte_end":7207022,"line_start":631,"line_end":631,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207027,"byte_end":7207121,"line_start":632,"line_end":632,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207126,"byte_end":7207173,"line_start":633,"line_end":633,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207178,"byte_end":7207198,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207203,"byte_end":7207282,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207287,"byte_end":7207300,"line_start":636,"line_end":636,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207305,"byte_end":7207314,"line_start":637,"line_end":637,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207319,"byte_end":7207324,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207329,"byte_end":7207336,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209996,"byte_end":7210003,"line_start":743,"line_end":743,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209933,"byte_end":7209985,"line_start":742,"line_end":742,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210095,"byte_end":7210105,"line_start":745,"line_end":745,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210033,"byte_end":7210087,"line_start":744,"line_end":744,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210412,"byte_end":7210422,"line_start":753,"line_end":753,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210127,"byte_end":7210191,"line_start":747,"line_end":747,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210196,"byte_end":7210199,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210204,"byte_end":7210216,"line_start":749,"line_end":749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210221,"byte_end":7210224,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210229,"byte_end":7210324,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210329,"byte_end":7210397,"line_start":752,"line_end":752,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210688,"byte_end":7210693,"line_start":762,"line_end":762,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210448,"byte_end":7210483,"line_start":756,"line_end":756,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210484,"byte_end":7210487,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210488,"byte_end":7210530,"line_start":758,"line_end":758,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210531,"byte_end":7210534,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210535,"byte_end":7210633,"line_start":760,"line_end":760,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210634,"byte_end":7210676,"line_start":761,"line_end":761,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212091,"byte_end":7212099,"line_start":813,"line_end":813,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211343,"byte_end":7211393,"line_start":791,"line_end":791,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211398,"byte_end":7211401,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211406,"byte_end":7211498,"line_start":793,"line_end":793,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211503,"byte_end":7211596,"line_start":794,"line_end":794,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211601,"byte_end":7211626,"line_start":795,"line_end":795,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211631,"byte_end":7211634,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211639,"byte_end":7211651,"line_start":797,"line_end":797,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211656,"byte_end":7211659,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211664,"byte_end":7211708,"line_start":799,"line_end":799,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211713,"byte_end":7211716,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211721,"byte_end":7211733,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211738,"byte_end":7211741,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211746,"byte_end":7211842,"line_start":803,"line_end":803,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211847,"byte_end":7211894,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211899,"byte_end":7211902,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211907,"byte_end":7211921,"line_start":806,"line_end":806,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211926,"byte_end":7211929,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211934,"byte_end":7211941,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211946,"byte_end":7211977,"line_start":809,"line_end":809,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211982,"byte_end":7211985,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211990,"byte_end":7212060,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212065,"byte_end":7212072,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212497,"byte_end":7212505,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212234,"byte_end":7212278,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212283,"byte_end":7212286,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212291,"byte_end":7212305,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212310,"byte_end":7212313,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212318,"byte_end":7212325,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212330,"byte_end":7212361,"line_start":824,"line_end":824,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212366,"byte_end":7212369,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212374,"byte_end":7212403,"line_start":826,"line_end":826,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212408,"byte_end":7212443,"line_start":827,"line_end":827,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212448,"byte_end":7212473,"line_start":828,"line_end":828,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212478,"byte_end":7212485,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212894,"byte_end":7212897,"line_start":845,"line_end":845,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212664,"byte_end":7212745,"line_start":836,"line_end":836,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212750,"byte_end":7212753,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212758,"byte_end":7212772,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212777,"byte_end":7212780,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212785,"byte_end":7212792,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212797,"byte_end":7212828,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212833,"byte_end":7212836,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212841,"byte_end":7212870,"line_start":843,"line_end":843,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212875,"byte_end":7212882,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213236,"byte_end":7213240,"line_start":860,"line_end":860,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212998,"byte_end":7213079,"line_start":851,"line_end":851,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213084,"byte_end":7213087,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213092,"byte_end":7213106,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213111,"byte_end":7213114,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213119,"byte_end":7213126,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213131,"byte_end":7213162,"line_start":856,"line_end":856,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213167,"byte_end":7213170,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213175,"byte_end":7213212,"line_start":858,"line_end":858,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213217,"byte_end":7213224,"line_start":859,"line_end":859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213661,"byte_end":7213672,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213332,"byte_end":7213381,"line_start":864,"line_end":864,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213386,"byte_end":7213389,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213394,"byte_end":7213408,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213413,"byte_end":7213416,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213421,"byte_end":7213428,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213433,"byte_end":7213481,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213486,"byte_end":7213489,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213494,"byte_end":7213523,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213528,"byte_end":7213558,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213563,"byte_end":7213596,"line_start":873,"line_end":873,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213601,"byte_end":7213608,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213613,"byte_end":7213649,"line_start":875,"line_end":875,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213992,"byte_end":7213995,"line_start":889,"line_end":889,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213784,"byte_end":7213830,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213835,"byte_end":7213838,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213843,"byte_end":7213857,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213862,"byte_end":7213865,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213870,"byte_end":7213877,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213882,"byte_end":7213913,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213918,"byte_end":7213921,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213926,"byte_end":7213968,"line_start":887,"line_end":887,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7213973,"byte_end":7213980,"line_start":888,"line_end":888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214468,"byte_end":7214476,"line_start":907,"line_end":907,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214091,"byte_end":7214181,"line_start":894,"line_end":894,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214186,"byte_end":7214224,"line_start":895,"line_end":895,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214229,"byte_end":7214232,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214237,"byte_end":7214251,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214256,"byte_end":7214259,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214264,"byte_end":7214271,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214276,"byte_end":7214307,"line_start":900,"line_end":900,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214312,"byte_end":7214315,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214320,"byte_end":7214349,"line_start":902,"line_end":902,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214354,"byte_end":7214381,"line_start":903,"line_end":903,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214386,"byte_end":7214412,"line_start":904,"line_end":904,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214417,"byte_end":7214444,"line_start":905,"line_end":905,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214449,"byte_end":7214456,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216938,"byte_end":7216944,"line_start":1010,"line_end":1010,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216659,"byte_end":7216712,"line_start":1004,"line_end":1004,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216713,"byte_end":7216716,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216717,"byte_end":7216780,"line_start":1006,"line_end":1006,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216781,"byte_end":7216784,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216785,"byte_end":7216883,"line_start":1008,"line_end":1008,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216884,"byte_end":7216926,"line_start":1009,"line_end":1009,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218115,"byte_end":7218121,"line_start":1059,"line_end":1059,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217596,"byte_end":7217656,"line_start":1042,"line_end":1042,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217661,"byte_end":7217664,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217669,"byte_end":7217683,"line_start":1044,"line_end":1044,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217688,"byte_end":7217691,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217696,"byte_end":7217703,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217708,"byte_end":7217764,"line_start":1047,"line_end":1047,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217769,"byte_end":7217813,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217818,"byte_end":7217821,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217826,"byte_end":7217855,"line_start":1050,"line_end":1050,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217860,"byte_end":7217890,"line_start":1051,"line_end":1051,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217895,"byte_end":7217923,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217928,"byte_end":7217931,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217936,"byte_end":7217966,"line_start":1054,"line_end":1054,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217971,"byte_end":7218005,"line_start":1055,"line_end":1055,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218010,"byte_end":7218042,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218047,"byte_end":7218054,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218059,"byte_end":7218103,"line_start":1058,"line_end":1058,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218498,"byte_end":7218502,"line_start":1076,"line_end":1076,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218282,"byte_end":7218313,"line_start":1066,"line_end":1066,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218318,"byte_end":7218321,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218326,"byte_end":7218340,"line_start":1068,"line_end":1068,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218345,"byte_end":7218348,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218353,"byte_end":7218360,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218365,"byte_end":7218397,"line_start":1071,"line_end":1071,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218402,"byte_end":7218405,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218410,"byte_end":7218444,"line_start":1073,"line_end":1073,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218449,"byte_end":7218474,"line_start":1074,"line_end":1074,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218479,"byte_end":7218486,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219108,"byte_end":7219115,"line_start":1098,"line_end":1098,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218617,"byte_end":7218659,"line_start":1083,"line_end":1083,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218664,"byte_end":7218667,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218672,"byte_end":7218686,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218691,"byte_end":7218694,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218699,"byte_end":7218706,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218711,"byte_end":7218767,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218772,"byte_end":7218816,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218821,"byte_end":7218824,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218829,"byte_end":7218856,"line_start":1091,"line_end":1091,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218861,"byte_end":7218891,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218896,"byte_end":7218941,"line_start":1093,"line_end":1093,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218946,"byte_end":7218984,"line_start":1094,"line_end":1094,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218989,"byte_end":7219035,"line_start":1095,"line_end":1095,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219040,"byte_end":7219047,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219052,"byte_end":7219096,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220489,"byte_end":7220494,"line_start":1136,"line_end":1136,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219215,"byte_end":7219244,"line_start":1103,"line_end":1103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219249,"byte_end":7219252,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219257,"byte_end":7219335,"line_start":1105,"line_end":1105,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219340,"byte_end":7219343,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219348,"byte_end":7219360,"line_start":1107,"line_end":1107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219365,"byte_end":7219368,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219373,"byte_end":7219458,"line_start":1109,"line_end":1109,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219463,"byte_end":7219466,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219471,"byte_end":7219562,"line_start":1111,"line_end":1111,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219567,"byte_end":7219616,"line_start":1112,"line_end":1112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219621,"byte_end":7219624,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219629,"byte_end":7219701,"line_start":1114,"line_end":1114,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219706,"byte_end":7219781,"line_start":1115,"line_end":1115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219786,"byte_end":7219789,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219794,"byte_end":7219887,"line_start":1117,"line_end":1117,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219892,"byte_end":7219985,"line_start":1118,"line_end":1118,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7219990,"byte_end":7220028,"line_start":1119,"line_end":1119,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220033,"byte_end":7220036,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220041,"byte_end":7220055,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220060,"byte_end":7220063,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220068,"byte_end":7220075,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220080,"byte_end":7220129,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220134,"byte_end":7220178,"line_start":1125,"line_end":1125,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220183,"byte_end":7220186,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220191,"byte_end":7220221,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220226,"byte_end":7220256,"line_start":1128,"line_end":1128,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220261,"byte_end":7220295,"line_start":1129,"line_end":1129,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220300,"byte_end":7220312,"line_start":1130,"line_end":1130,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220317,"byte_end":7220354,"line_start":1131,"line_end":1131,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220359,"byte_end":7220364,"line_start":1132,"line_end":1132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220369,"byte_end":7220376,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220381,"byte_end":7220425,"line_start":1134,"line_end":1134,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220430,"byte_end":7220470,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221805,"byte_end":7221814,"line_start":1178,"line_end":1178,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220600,"byte_end":7220629,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220634,"byte_end":7220637,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220642,"byte_end":7220728,"line_start":1143,"line_end":1143,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220733,"byte_end":7220736,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220741,"byte_end":7220753,"line_start":1145,"line_end":1145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220758,"byte_end":7220761,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220766,"byte_end":7220861,"line_start":1147,"line_end":1147,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220866,"byte_end":7220903,"line_start":1148,"line_end":1148,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220908,"byte_end":7220911,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7220916,"byte_end":7221005,"line_start":1150,"line_end":1150,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221010,"byte_end":7221013,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221018,"byte_end":7221092,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221097,"byte_end":7221100,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221105,"byte_end":7221119,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221124,"byte_end":7221127,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221132,"byte_end":7221139,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221144,"byte_end":7221193,"line_start":1157,"line_end":1157,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221198,"byte_end":7221242,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221247,"byte_end":7221250,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221255,"byte_end":7221297,"line_start":1160,"line_end":1160,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221302,"byte_end":7221332,"line_start":1161,"line_end":1161,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221337,"byte_end":7221340,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221345,"byte_end":7221383,"line_start":1163,"line_end":1163,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221388,"byte_end":7221400,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221405,"byte_end":7221435,"line_start":1165,"line_end":1165,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221440,"byte_end":7221470,"line_start":1166,"line_end":1166,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221475,"byte_end":7221516,"line_start":1167,"line_end":1167,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221521,"byte_end":7221539,"line_start":1168,"line_end":1168,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221544,"byte_end":7221588,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221593,"byte_end":7221598,"line_start":1170,"line_end":1170,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221603,"byte_end":7221606,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221611,"byte_end":7221645,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221650,"byte_end":7221662,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221667,"byte_end":7221719,"line_start":1174,"line_end":1174,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221724,"byte_end":7221729,"line_start":1175,"line_end":1175,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221734,"byte_end":7221741,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221746,"byte_end":7221786,"line_start":1177,"line_end":1177,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223196,"byte_end":7223202,"line_start":1215,"line_end":1215,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221932,"byte_end":7221972,"line_start":1183,"line_end":1183,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221977,"byte_end":7221980,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7221985,"byte_end":7222080,"line_start":1185,"line_end":1185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222085,"byte_end":7222088,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222093,"byte_end":7222105,"line_start":1187,"line_end":1187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222110,"byte_end":7222113,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222118,"byte_end":7222203,"line_start":1189,"line_end":1189,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222208,"byte_end":7222211,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222216,"byte_end":7222307,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222312,"byte_end":7222361,"line_start":1192,"line_end":1192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222366,"byte_end":7222369,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222374,"byte_end":7222446,"line_start":1194,"line_end":1194,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222451,"byte_end":7222526,"line_start":1195,"line_end":1195,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222531,"byte_end":7222534,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222539,"byte_end":7222632,"line_start":1197,"line_end":1197,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222637,"byte_end":7222730,"line_start":1198,"line_end":1198,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222735,"byte_end":7222773,"line_start":1199,"line_end":1199,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222778,"byte_end":7222781,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222786,"byte_end":7222800,"line_start":1201,"line_end":1201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222805,"byte_end":7222808,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222813,"byte_end":7222820,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222825,"byte_end":7222874,"line_start":1204,"line_end":1204,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222879,"byte_end":7222923,"line_start":1205,"line_end":1205,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222928,"byte_end":7222931,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222936,"byte_end":7222966,"line_start":1207,"line_end":1207,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7222971,"byte_end":7223001,"line_start":1208,"line_end":1208,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223006,"byte_end":7223040,"line_start":1209,"line_end":1209,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223045,"byte_end":7223057,"line_start":1210,"line_end":1210,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223062,"byte_end":7223106,"line_start":1211,"line_end":1211,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223111,"byte_end":7223116,"line_start":1212,"line_end":1212,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223121,"byte_end":7223128,"line_start":1213,"line_end":1213,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223133,"byte_end":7223177,"line_start":1214,"line_end":1214,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224062,"byte_end":7224072,"line_start":1248,"line_end":1248,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223392,"byte_end":7223427,"line_start":1224,"line_end":1224,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223432,"byte_end":7223435,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223440,"byte_end":7223452,"line_start":1226,"line_end":1226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223457,"byte_end":7223460,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223465,"byte_end":7223524,"line_start":1228,"line_end":1228,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223529,"byte_end":7223532,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223537,"byte_end":7223549,"line_start":1230,"line_end":1230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223554,"byte_end":7223557,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223562,"byte_end":7223649,"line_start":1232,"line_end":1232,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223654,"byte_end":7223687,"line_start":1233,"line_end":1233,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223692,"byte_end":7223695,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223700,"byte_end":7223714,"line_start":1235,"line_end":1235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223719,"byte_end":7223722,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223727,"byte_end":7223734,"line_start":1237,"line_end":1237,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223739,"byte_end":7223788,"line_start":1238,"line_end":1238,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223793,"byte_end":7223837,"line_start":1239,"line_end":1239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223842,"byte_end":7223845,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223850,"byte_end":7223880,"line_start":1241,"line_end":1241,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223885,"byte_end":7223897,"line_start":1242,"line_end":1242,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223902,"byte_end":7223944,"line_start":1243,"line_end":1243,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223949,"byte_end":7223987,"line_start":1244,"line_end":1244,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7223992,"byte_end":7224021,"line_start":1245,"line_end":1245,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224026,"byte_end":7224031,"line_start":1246,"line_end":1246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224036,"byte_end":7224043,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224681,"byte_end":7224684,"line_start":1267,"line_end":1267,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224224,"byte_end":7224270,"line_start":1253,"line_end":1253,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224275,"byte_end":7224278,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224283,"byte_end":7224297,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224302,"byte_end":7224305,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224310,"byte_end":7224317,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224322,"byte_end":7224378,"line_start":1258,"line_end":1258,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224383,"byte_end":7224427,"line_start":1259,"line_end":1259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224432,"byte_end":7224435,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224440,"byte_end":7224502,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224507,"byte_end":7224537,"line_start":1262,"line_end":1262,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224542,"byte_end":7224576,"line_start":1263,"line_end":1263,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224581,"byte_end":7224608,"line_start":1264,"line_end":1264,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224613,"byte_end":7224620,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224625,"byte_end":7224669,"line_start":1266,"line_end":1266,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225407,"byte_end":7225415,"line_start":1291,"line_end":1291,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224780,"byte_end":7224870,"line_start":1272,"line_end":1272,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224875,"byte_end":7224913,"line_start":1273,"line_end":1273,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224918,"byte_end":7224921,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224926,"byte_end":7224940,"line_start":1275,"line_end":1275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224945,"byte_end":7224948,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224953,"byte_end":7224960,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7224965,"byte_end":7225014,"line_start":1278,"line_end":1278,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225019,"byte_end":7225063,"line_start":1279,"line_end":1279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225068,"byte_end":7225071,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225076,"byte_end":7225106,"line_start":1281,"line_end":1281,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225111,"byte_end":7225141,"line_start":1282,"line_end":1282,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225146,"byte_end":7225181,"line_start":1283,"line_end":1283,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225186,"byte_end":7225214,"line_start":1284,"line_end":1284,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225219,"byte_end":7225222,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225227,"byte_end":7225255,"line_start":1286,"line_end":1286,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225260,"byte_end":7225288,"line_start":1287,"line_end":1287,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225293,"byte_end":7225334,"line_start":1288,"line_end":1288,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225339,"byte_end":7225346,"line_start":1289,"line_end":1289,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225351,"byte_end":7225395,"line_start":1290,"line_end":1290,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7227926,"byte_end":7227935,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":282}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7227877,"byte_end":7227914,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228242,"byte_end":7228245,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228202,"byte_end":7228230,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228350,"byte_end":7228358,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228293,"byte_end":7228338,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229026,"byte_end":7229037,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":298}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228978,"byte_end":7229014,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229148,"byte_end":7229151,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229102,"byte_end":7229122,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229127,"byte_end":7229136,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229289,"byte_end":7229298,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229220,"byte_end":7229263,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229268,"byte_end":7229277,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229454,"byte_end":7229463,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229372,"byte_end":7229428,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229433,"byte_end":7229442,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248351,"byte_end":7248356,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":357}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246635,"byte_end":7246684,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246685,"byte_end":7246688,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246689,"byte_end":7246702,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246703,"byte_end":7246706,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246707,"byte_end":7246786,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246787,"byte_end":7246790,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246791,"byte_end":7246798,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246799,"byte_end":7246832,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246833,"byte_end":7246836,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246837,"byte_end":7246935,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7246936,"byte_end":7247028,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247029,"byte_end":7247059,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247060,"byte_end":7247067,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247068,"byte_end":7247071,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247072,"byte_end":7247148,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247149,"byte_end":7247152,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247153,"byte_end":7247180,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247181,"byte_end":7247184,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247185,"byte_end":7247272,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247273,"byte_end":7247289,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247290,"byte_end":7247293,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247294,"byte_end":7247301,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247302,"byte_end":7247351,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247352,"byte_end":7247396,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247397,"byte_end":7247400,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247401,"byte_end":7247439,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247440,"byte_end":7247469,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247470,"byte_end":7247473,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247474,"byte_end":7247504,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247505,"byte_end":7247535,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247536,"byte_end":7247539,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247540,"byte_end":7247614,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247615,"byte_end":7247649,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247650,"byte_end":7247653,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247654,"byte_end":7247705,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247706,"byte_end":7247752,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247753,"byte_end":7247796,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247797,"byte_end":7247802,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247803,"byte_end":7247810,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247811,"byte_end":7247814,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247815,"byte_end":7247836,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247837,"byte_end":7247840,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247841,"byte_end":7247936,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7247937,"byte_end":7248035,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248036,"byte_end":7248055,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248056,"byte_end":7248059,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248060,"byte_end":7248067,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248068,"byte_end":7248101,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248102,"byte_end":7248105,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248106,"byte_end":7248136,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248137,"byte_end":7248167,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248168,"byte_end":7248200,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248201,"byte_end":7248218,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248219,"byte_end":7248251,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248252,"byte_end":7248269,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248270,"byte_end":7248303,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248304,"byte_end":7248311,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248312,"byte_end":7248315,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248316,"byte_end":7248339,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249331,"byte_end":7249336,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248415,"byte_end":7248504,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248509,"byte_end":7248534,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248539,"byte_end":7248542,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248547,"byte_end":7248640,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248645,"byte_end":7248733,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248738,"byte_end":7248828,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248833,"byte_end":7248873,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248878,"byte_end":7248881,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248886,"byte_end":7248976,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248981,"byte_end":7249072,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249077,"byte_end":7249164,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249169,"byte_end":7249189,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249194,"byte_end":7249197,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249202,"byte_end":7249289,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249294,"byte_end":7249319,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253636,"byte_end":7253651,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249500,"byte_end":7249589,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249594,"byte_end":7249619,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249624,"byte_end":7249627,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249632,"byte_end":7249725,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249730,"byte_end":7249818,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249823,"byte_end":7249913,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249918,"byte_end":7249958,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249963,"byte_end":7249966,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7249971,"byte_end":7250061,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250066,"byte_end":7250157,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250162,"byte_end":7250249,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250254,"byte_end":7250274,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250279,"byte_end":7250282,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250287,"byte_end":7250374,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250379,"byte_end":7250404,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250409,"byte_end":7250412,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250417,"byte_end":7250429,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250434,"byte_end":7250437,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250442,"byte_end":7250534,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250539,"byte_end":7250626,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250631,"byte_end":7250643,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250648,"byte_end":7250651,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250656,"byte_end":7250663,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250668,"byte_end":7250701,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250706,"byte_end":7250709,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250714,"byte_end":7250744,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250749,"byte_end":7250776,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250781,"byte_end":7250793,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250798,"byte_end":7250873,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250878,"byte_end":7250917,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250922,"byte_end":7250958,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250963,"byte_end":7250974,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250979,"byte_end":7250984,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7250989,"byte_end":7250996,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251001,"byte_end":7251004,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251009,"byte_end":7251103,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251108,"byte_end":7251139,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251144,"byte_end":7251147,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251152,"byte_end":7251247,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251252,"byte_end":7251344,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251349,"byte_end":7251438,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251443,"byte_end":7251446,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251451,"byte_end":7251464,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251469,"byte_end":7251522,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251527,"byte_end":7251609,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251614,"byte_end":7251621,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251626,"byte_end":7251629,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251634,"byte_end":7251727,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251732,"byte_end":7251827,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251832,"byte_end":7251892,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251897,"byte_end":7251900,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251905,"byte_end":7251919,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251924,"byte_end":7251927,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7251932,"byte_end":7252018,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252023,"byte_end":7252117,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252122,"byte_end":7252218,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252223,"byte_end":7252315,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252320,"byte_end":7252376,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252381,"byte_end":7252384,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252389,"byte_end":7252396,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252401,"byte_end":7252457,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252462,"byte_end":7252506,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252511,"byte_end":7252514,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252519,"byte_end":7252550,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252555,"byte_end":7252558,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252563,"byte_end":7252640,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252645,"byte_end":7252676,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252681,"byte_end":7252684,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252689,"byte_end":7252719,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252724,"byte_end":7252754,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252759,"byte_end":7252762,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252767,"byte_end":7252844,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252849,"byte_end":7252921,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252926,"byte_end":7252929,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252934,"byte_end":7252955,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7252960,"byte_end":7253020,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253025,"byte_end":7253107,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253112,"byte_end":7253128,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253133,"byte_end":7253212,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253217,"byte_end":7253260,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253265,"byte_end":7253333,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253338,"byte_end":7253430,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253435,"byte_end":7253519,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253524,"byte_end":7253561,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253566,"byte_end":7253581,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253586,"byte_end":7253595,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253600,"byte_end":7253605,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253610,"byte_end":7253617,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257238,"byte_end":7257251,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253890,"byte_end":7253983,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7253988,"byte_end":7254040,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254045,"byte_end":7254048,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254053,"byte_end":7254146,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254151,"byte_end":7254241,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254246,"byte_end":7254335,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254340,"byte_end":7254394,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254399,"byte_end":7254402,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254407,"byte_end":7254500,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254505,"byte_end":7254598,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254603,"byte_end":7254696,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254701,"byte_end":7254732,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254737,"byte_end":7254740,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254745,"byte_end":7254834,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254839,"byte_end":7254864,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254869,"byte_end":7254872,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254877,"byte_end":7254889,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254894,"byte_end":7254897,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7254902,"byte_end":7254995,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255000,"byte_end":7255033,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255038,"byte_end":7255041,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255046,"byte_end":7255141,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255146,"byte_end":7255184,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255189,"byte_end":7255192,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255197,"byte_end":7255292,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255297,"byte_end":7255389,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255394,"byte_end":7255483,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255488,"byte_end":7255491,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255496,"byte_end":7255509,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255514,"byte_end":7255567,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255572,"byte_end":7255631,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255636,"byte_end":7255643,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255648,"byte_end":7255651,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255656,"byte_end":7255750,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255755,"byte_end":7255842,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255847,"byte_end":7255907,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255912,"byte_end":7255915,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255920,"byte_end":7255934,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255939,"byte_end":7255942,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7255947,"byte_end":7256033,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256038,"byte_end":7256132,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256137,"byte_end":7256233,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256238,"byte_end":7256330,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256335,"byte_end":7256391,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256396,"byte_end":7256399,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256404,"byte_end":7256411,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256416,"byte_end":7256472,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256477,"byte_end":7256521,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256526,"byte_end":7256529,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256534,"byte_end":7256565,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256570,"byte_end":7256573,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256578,"byte_end":7256655,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256660,"byte_end":7256691,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256696,"byte_end":7256699,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256704,"byte_end":7256734,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256739,"byte_end":7256769,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256774,"byte_end":7256777,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256782,"byte_end":7256859,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256864,"byte_end":7256936,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256941,"byte_end":7256944,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256949,"byte_end":7256970,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7256975,"byte_end":7257035,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257040,"byte_end":7257122,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257127,"byte_end":7257143,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257148,"byte_end":7257183,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257188,"byte_end":7257197,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257202,"byte_end":7257207,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257212,"byte_end":7257219,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258136,"byte_end":7258141,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257351,"byte_end":7257446,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257451,"byte_end":7257468,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257473,"byte_end":7257476,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257481,"byte_end":7257575,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257580,"byte_end":7257672,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257677,"byte_end":7257745,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257750,"byte_end":7257753,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257758,"byte_end":7257850,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257855,"byte_end":7257858,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257863,"byte_end":7257877,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257882,"byte_end":7257885,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257890,"byte_end":7257897,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257902,"byte_end":7257935,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257940,"byte_end":7257943,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257948,"byte_end":7257978,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7257983,"byte_end":7258008,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258013,"byte_end":7258077,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258082,"byte_end":7258089,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258094,"byte_end":7258112,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258117,"byte_end":7258124,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259303,"byte_end":7259308,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258265,"byte_end":7258316,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258321,"byte_end":7258324,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258329,"byte_end":7258419,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258424,"byte_end":7258518,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258523,"byte_end":7258617,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258622,"byte_end":7258674,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258679,"byte_end":7258682,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258687,"byte_end":7258780,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258785,"byte_end":7258788,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258793,"byte_end":7258807,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258812,"byte_end":7258815,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258820,"byte_end":7258827,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258832,"byte_end":7258881,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258886,"byte_end":7258930,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258935,"byte_end":7258938,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258943,"byte_end":7258972,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7258977,"byte_end":7259010,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259015,"byte_end":7259020,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259025,"byte_end":7259064,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259069,"byte_end":7259123,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259128,"byte_end":7259133,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259138,"byte_end":7259156,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259161,"byte_end":7259166,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259171,"byte_end":7259210,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259215,"byte_end":7259269,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259274,"byte_end":7259279,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259284,"byte_end":7259291,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260635,"byte_end":7260646,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259432,"byte_end":7259523,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259528,"byte_end":7259531,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259536,"byte_end":7259627,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259632,"byte_end":7259728,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259733,"byte_end":7259827,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259832,"byte_end":7259851,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259856,"byte_end":7259859,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259864,"byte_end":7259958,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7259963,"byte_end":7260005,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260010,"byte_end":7260013,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260018,"byte_end":7260032,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260037,"byte_end":7260040,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260045,"byte_end":7260052,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260057,"byte_end":7260106,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260111,"byte_end":7260155,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260160,"byte_end":7260180,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260185,"byte_end":7260213,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260218,"byte_end":7260221,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260226,"byte_end":7260255,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260260,"byte_end":7260293,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260298,"byte_end":7260303,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260308,"byte_end":7260347,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260352,"byte_end":7260406,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260411,"byte_end":7260416,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260421,"byte_end":7260488,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260493,"byte_end":7260498,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260503,"byte_end":7260542,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260547,"byte_end":7260601,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260606,"byte_end":7260611,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7260616,"byte_end":7260623,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261792,"byte_end":7261801,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261251,"byte_end":7261306,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261311,"byte_end":7261314,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261319,"byte_end":7261394,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261399,"byte_end":7261449,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261454,"byte_end":7261457,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261462,"byte_end":7261546,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261551,"byte_end":7261554,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261559,"byte_end":7261573,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261578,"byte_end":7261581,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261586,"byte_end":7261593,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261598,"byte_end":7261631,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261636,"byte_end":7261639,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261644,"byte_end":7261674,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261679,"byte_end":7261709,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261714,"byte_end":7261768,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261773,"byte_end":7261780,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7265100,"byte_end":7265111,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262211,"byte_end":7262298,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262299,"byte_end":7262302,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262303,"byte_end":7262398,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262399,"byte_end":7262488,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262489,"byte_end":7262492,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262493,"byte_end":7262586,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262587,"byte_end":7262624,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262625,"byte_end":7262628,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262629,"byte_end":7262725,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262726,"byte_end":7262729,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262730,"byte_end":7262742,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262743,"byte_end":7262746,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262747,"byte_end":7262837,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262838,"byte_end":7262905,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262906,"byte_end":7262909,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262910,"byte_end":7262924,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262925,"byte_end":7262928,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262929,"byte_end":7262936,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262937,"byte_end":7262986,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262987,"byte_end":7263032,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263033,"byte_end":7263036,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263037,"byte_end":7263064,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263065,"byte_end":7263068,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263069,"byte_end":7263081,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263082,"byte_end":7263137,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263138,"byte_end":7263184,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263185,"byte_end":7263188,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263189,"byte_end":7263263,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263264,"byte_end":7263314,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263315,"byte_end":7263318,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263319,"byte_end":7263348,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263349,"byte_end":7263405,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263406,"byte_end":7263417,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263418,"byte_end":7263421,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263422,"byte_end":7263503,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263504,"byte_end":7263509,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263510,"byte_end":7263517,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263518,"byte_end":7263521,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263522,"byte_end":7263616,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263617,"byte_end":7263620,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263621,"byte_end":7263715,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263716,"byte_end":7263801,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263802,"byte_end":7263805,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263806,"byte_end":7263905,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7263906,"byte_end":7264004,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264005,"byte_end":7264025,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264026,"byte_end":7264029,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264030,"byte_end":7264037,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264038,"byte_end":7264087,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264088,"byte_end":7264119,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264120,"byte_end":7264165,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264166,"byte_end":7264169,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264170,"byte_end":7264191,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264192,"byte_end":7264222,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264223,"byte_end":7264228,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264229,"byte_end":7264232,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264233,"byte_end":7264253,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264254,"byte_end":7264284,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264285,"byte_end":7264315,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264316,"byte_end":7264321,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264322,"byte_end":7264325,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264326,"byte_end":7264357,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264358,"byte_end":7264386,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264387,"byte_end":7264407,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264408,"byte_end":7264444,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264445,"byte_end":7264522,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264523,"byte_end":7264526,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264527,"byte_end":7264578,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264579,"byte_end":7264619,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264620,"byte_end":7264694,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264695,"byte_end":7264698,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264699,"byte_end":7264787,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264788,"byte_end":7264838,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264839,"byte_end":7264891,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264892,"byte_end":7264920,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264921,"byte_end":7264924,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264925,"byte_end":7264957,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264958,"byte_end":7264975,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264976,"byte_end":7264989,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7264990,"byte_end":7264999,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7265000,"byte_end":7265005,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7265006,"byte_end":7265013,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7265014,"byte_end":7265017,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7265018,"byte_end":7265047,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7265048,"byte_end":7265075,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7265076,"byte_end":7265085,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":8320798,"byte_end":8320801,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":8320752,"byte_end":8320780,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":8320781,"byte_end":8320790,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":8320926,"byte_end":8320935,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":8320857,"byte_end":8320908,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":8320909,"byte_end":8320918,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":8321045,"byte_end":8321062,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":8320996,"byte_end":8321037,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7186893,"byte_end":7186911,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7188089,"byte_end":7188097,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191850,"byte_end":7191851,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194936,"byte_end":7194942,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195007,"byte_end":7195013,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195029,"byte_end":7195035,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195368,"byte_end":7195374,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":672},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207488,"byte_end":7207494,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207841,"byte_end":7207847,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7208135,"byte_end":7208141,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7208488,"byte_end":7208494,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7208606,"byte_end":7208612,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209007,"byte_end":7209013,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209116,"byte_end":7209122,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209242,"byte_end":7209248,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209597,"byte_end":7209603,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210816,"byte_end":7210821,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211328,"byte_end":7211333,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212983,"byte_end":7212988,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214658,"byte_end":7214663,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214853,"byte_end":7214858,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215136,"byte_end":7215141,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215282,"byte_end":7215287,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215480,"byte_end":7215485,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215651,"byte_end":7215656,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215746,"byte_end":7215751,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216224,"byte_end":7216229,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216339,"byte_end":7216344,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216466,"byte_end":7216471,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216577,"byte_end":7216582,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217083,"byte_end":7217089,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217263,"byte_end":7217269,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217324,"byte_end":7217330,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217576,"byte_end":7217582,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218262,"byte_end":7218268,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225560,"byte_end":7225566,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226129,"byte_end":7226135,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226262,"byte_end":7226268,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226342,"byte_end":7226348,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226513,"byte_end":7226519,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226667,"byte_end":7226673,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226976,"byte_end":7226982,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7227173,"byte_end":7227179,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7227998,"byte_end":7228007,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228032,"byte_end":7228041,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228063,"byte_end":7228072,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228186,"byte_end":7228195,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228437,"byte_end":7228446,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228644,"byte_end":7228653,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228781,"byte_end":7228790,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228964,"byte_end":7228973,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229084,"byte_end":7229095,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229555,"byte_end":7229566,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229713,"byte_end":7229724,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\deferred.rs","byte_start":7239662,"byte_end":7239670,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\deferred.rs","byte_start":7239794,"byte_end":7239802,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\epoch.rs","byte_start":7243649,"byte_end":7243654,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\epoch.rs","byte_start":7245409,"byte_end":7245420,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248403,"byte_end":7248408,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261926,"byte_end":7261931,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262101,"byte_end":7262106,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7265390,"byte_end":7265402,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7268434,"byte_end":7268437,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7268447,"byte_end":7268450,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7269377,"byte_end":7269380,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7272658,"byte_end":7272661,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7273060,"byte_end":7273063,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7273489,"byte_end":7273498,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7273508,"byte_end":7273517,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7274192,"byte_end":7274198,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7279184,"byte_end":7279189,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7287709,"byte_end":7287714,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7293704,"byte_end":7293709,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7293845,"byte_end":7293850,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7294356,"byte_end":7294360,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7296912,"byte_end":7296916,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7297448,"byte_end":7297452,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":7307230,"byte_end":7307235,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":7307272,"byte_end":7307277,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":7307293,"byte_end":7307298,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":7312912,"byte_end":7312917,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7186893,"byte_end":7186911,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7188089,"byte_end":7188097,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":32544},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7191850,"byte_end":7191851,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7194936,"byte_end":7194942,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195007,"byte_end":7195013,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195029,"byte_end":7195035,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7195368,"byte_end":7195374,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207488,"byte_end":7207494,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7207841,"byte_end":7207847,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6621}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7208135,"byte_end":7208141,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7208488,"byte_end":7208494,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7208606,"byte_end":7208612,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209007,"byte_end":7209013,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209116,"byte_end":7209122,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209242,"byte_end":7209248,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7209597,"byte_end":7209603,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7210816,"byte_end":7210821,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":166},"to":{"krate":0,"index":162}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7211328,"byte_end":7211333,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7212983,"byte_end":7212988,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214658,"byte_end":7214663,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7214853,"byte_end":7214858,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215136,"byte_end":7215141,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215282,"byte_end":7215287,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215480,"byte_end":7215485,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215651,"byte_end":7215656,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7215746,"byte_end":7215751,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216224,"byte_end":7216229,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1720}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216339,"byte_end":7216344,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1723}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216466,"byte_end":7216471,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7216577,"byte_end":7216582,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1957}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217083,"byte_end":7217089,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217263,"byte_end":7217269,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2055}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217324,"byte_end":7217330,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":220},"to":{"krate":0,"index":162}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7217576,"byte_end":7217582,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7218262,"byte_end":7218268,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7225560,"byte_end":7225566,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226129,"byte_end":7226135,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226262,"byte_end":7226268,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226342,"byte_end":7226348,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226513,"byte_end":7226519,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1796}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226667,"byte_end":7226673,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7226976,"byte_end":7226982,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6621}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":7227173,"byte_end":7227179,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7227998,"byte_end":7228007,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228032,"byte_end":7228041,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228063,"byte_end":7228072,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228186,"byte_end":7228195,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228437,"byte_end":7228446,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228644,"byte_end":7228653,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228781,"byte_end":7228790,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7228964,"byte_end":7228973,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229084,"byte_end":7229095,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229555,"byte_end":7229566,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":7229713,"byte_end":7229724,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\deferred.rs","byte_start":7239662,"byte_end":7239670,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\deferred.rs","byte_start":7239794,"byte_end":7239802,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\epoch.rs","byte_start":7243649,"byte_end":7243654,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\epoch.rs","byte_start":7245409,"byte_end":7245420,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7248403,"byte_end":7248408,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7261926,"byte_end":7261931,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7262101,"byte_end":7262106,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":7265390,"byte_end":7265402,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7268434,"byte_end":7268437,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7268447,"byte_end":7268450,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7269377,"byte_end":7269380,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7272658,"byte_end":7272661,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7273060,"byte_end":7273063,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7273489,"byte_end":7273498,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":601},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7273508,"byte_end":7273517,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7274192,"byte_end":7274198,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7279184,"byte_end":7279189,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":7287709,"byte_end":7287714,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":451},"to":{"krate":0,"index":489}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7293704,"byte_end":7293709,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":608},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7293845,"byte_end":7293850,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7294356,"byte_end":7294360,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7296912,"byte_end":7296916,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":7297448,"byte_end":7297452,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":494},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":7307230,"byte_end":7307235,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":7307272,"byte_end":7307277,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":7307293,"byte_end":7307298,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":7312912,"byte_end":7312917,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2266}}]}