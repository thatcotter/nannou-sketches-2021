{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2","program":"C:\\Users\\User\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=d964f51fa98180e0","-C","extra-filename=-d964f51fa98180e0","--out-dir","c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libcfg_if-9ceb6b49c89972d2.rmeta","--extern","crossbeam_utils=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libcrossbeam_utils-ae2a41389227e828.rmeta","--extern","lazy_static=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\liblazy_static-751c9fb625112ea5.rmeta","--extern","maybe_uninit=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libmaybe_uninit-994a41b388296e1f.rmeta","--extern","memoffset=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libmemoffset-bb20313743b7bcd3.rmeta","--extern","scopeguard=c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libscopeguard-25b478294c9dbe40.rmeta","--cap-lints","allow","--cfg","has_min_const_fn","--error-format=json","--sysroot","C:\\Users\\User\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\User\\Documents\\code\\rust\\nannou-sketches-2021\\target\\rls\\debug\\deps\\libcrossbeam_epoch-d964f51fa98180e0.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[8282379090956811954,13232801595084268249]},"crate_root":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src","external_crates":[{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":13,"id":{"name":"cfg_if","disambiguator":[14278688539970073542,8934083179492313950]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":14,"id":{"name":"maybe_uninit","disambiguator":[15847334453972866318,1661429404144705898]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":15,"id":{"name":"crossbeam_utils","disambiguator":[12832433562065972125,8147377685135015504]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":16,"id":{"name":"lazy_static","disambiguator":[2108853056651763308,9416867899167320082]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":17,"id":{"name":"memoffset","disambiguator":[10848722724808901866,47100360328032972]}},{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":18,"id":{"name":"scopeguard","disambiguator":[9918919416680813829,10059034963549450911]}}],"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":0,"byte_end":4147,"line_start":1,"line_end":108,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3757,"byte_end":3763,"line_start":94,"line_end":94,"column_start":32,"column_end":38},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3765,"byte_end":3783,"line_start":94,"line_end":94,"column_start":40,"column_end":58},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3785,"byte_end":3806,"line_start":94,"line_end":94,"column_start":60,"column_end":81},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3808,"byte_end":3813,"line_start":94,"line_end":94,"column_start":83,"column_end":88},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3815,"byte_end":3822,"line_start":94,"line_end":94,"column_start":90,"column_end":97},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3824,"byte_end":3830,"line_start":94,"line_end":94,"column_start":99,"column_end":105},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3867,"byte_end":3876,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3878,"byte_end":3889,"line_start":95,"line_end":95,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3922,"byte_end":3933,"line_start":96,"line_end":96,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3935,"byte_end":3940,"line_start":96,"line_end":96,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":4104,"byte_end":4121,"line_start":106,"line_end":106,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":4123,"byte_end":4132,"line_start":106,"line_end":106,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":4134,"byte_end":4137,"line_start":106,"line_end":106,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":0,"byte_end":4147,"line_start":1,"line_end":108,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":243},{"krate":0,"index":274},{"krate":0,"index":298},{"krate":0,"index":314},{"krate":0,"index":347},{"krate":0,"index":438},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`] the execution of an","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2244,"byte_end":2337,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2338,"byte_end":2433,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2434,"byte_end":2489,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2490,"byte_end":2493,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2494,"byte_end":2504,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2505,"byte_end":2508,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2509,"byte_end":2606,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2607,"byte_end":2680,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2681,"byte_end":2684,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2685,"byte_end":2719,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ [`Collector`]: struct.Collector.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2720,"byte_end":2760,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2761,"byte_end":2795,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2796,"byte_end":2820,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2821,"byte_end":2866,"line_start":55,"line_end":55,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2868,"byte_end":2890,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2891,"byte_end":2930,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187004,"byte_end":7187022,"line_start":27,"line_end":27,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7186933,"byte_end":7186992,"line_start":26,"line_end":26,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187136,"byte_end":7187143,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187055,"byte_end":7187127,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187229,"byte_end":7187232,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187165,"byte_end":7187220,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188117,"byte_end":7188138,"line_start":55,"line_end":55,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187547,"byte_end":7187599,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187600,"byte_end":7187603,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187604,"byte_end":7187695,"line_start":46,"line_end":46,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187696,"byte_end":7187788,"line_start":47,"line_end":47,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187789,"byte_end":7187792,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187793,"byte_end":7187858,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187859,"byte_end":7187862,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187863,"byte_end":7187957,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187958,"byte_end":7187984,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187985,"byte_end":7188077,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188078,"byte_end":7188106,"line_start":54,"line_end":54,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188204,"byte_end":7188211,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188145,"byte_end":7188196,"line_start":56,"line_end":56,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188429,"byte_end":7188436,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188237,"byte_end":7188285,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188290,"byte_end":7188293,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188298,"byte_end":7188391,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188396,"byte_end":7188421,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190208,"byte_end":7190214,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7189769,"byte_end":7189833,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7189834,"byte_end":7189837,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7189838,"byte_end":7189936,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.  More precisely, a tag should be less than `(1 <<","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7189937,"byte_end":7190029,"line_start":121,"line_end":121,"column_start":1,"column_end":93}},{"value":"/ mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190030,"byte_end":7190074,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190075,"byte_end":7190078,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190079,"byte_end":7190159,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190160,"byte_end":7190163,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Guard`]: struct.Guard.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190164,"byte_end":7190196,"line_start":126,"line_end":126,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191216,"byte_end":7191220,"line_start":171,"line_end":171,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub const fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190988,"byte_end":7191026,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191031,"byte_end":7191034,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191039,"byte_end":7191053,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191058,"byte_end":7191061,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191066,"byte_end":7191073,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191078,"byte_end":7191110,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191115,"byte_end":7191118,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191123,"byte_end":7191157,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191162,"byte_end":7191169,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"cfg(has_min_const_fn)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191174,"byte_end":7191198,"line_start":170,"line_end":170,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191580,"byte_end":7191583,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191347,"byte_end":7191429,"line_start":178,"line_end":178,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191434,"byte_end":7191437,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191442,"byte_end":7191456,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191461,"byte_end":7191464,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191469,"byte_end":7191476,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191481,"byte_end":7191513,"line_start":183,"line_end":183,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191518,"byte_end":7191521,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191526,"byte_end":7191556,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191561,"byte_end":7191568,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192207,"byte_end":7192211,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191658,"byte_end":7191703,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191708,"byte_end":7191711,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191716,"byte_end":7191806,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191811,"byte_end":7191825,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191830,"byte_end":7191833,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191838,"byte_end":7191916,"line_start":196,"line_end":196,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191921,"byte_end":7191924,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191929,"byte_end":7191943,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191948,"byte_end":7191951,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191956,"byte_end":7191963,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7191968,"byte_end":7192017,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192022,"byte_end":7192066,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192071,"byte_end":7192074,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192079,"byte_end":7192109,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192114,"byte_end":7192144,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192149,"byte_end":7192183,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192188,"byte_end":7192195,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193218,"byte_end":7193230,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192341,"byte_end":7192420,"line_start":212,"line_end":212,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192425,"byte_end":7192428,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192433,"byte_end":7192506,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192511,"byte_end":7192587,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192592,"byte_end":7192663,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192668,"byte_end":7192742,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192747,"byte_end":7192770,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192775,"byte_end":7192778,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192783,"byte_end":7192858,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192863,"byte_end":7192937,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192942,"byte_end":7192976,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192981,"byte_end":7192984,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7192989,"byte_end":7193003,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193008,"byte_end":7193011,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193016,"byte_end":7193023,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193028,"byte_end":7193077,"line_start":227,"line_end":227,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193082,"byte_end":7193085,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193090,"byte_end":7193120,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193125,"byte_end":7193155,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193160,"byte_end":7193194,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193199,"byte_end":7193206,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193944,"byte_end":7193949,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<'g, P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193350,"byte_end":7193415,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193420,"byte_end":7193423,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193428,"byte_end":7193518,"line_start":239,"line_end":239,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193523,"byte_end":7193537,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193542,"byte_end":7193545,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193550,"byte_end":7193628,"line_start":242,"line_end":242,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193633,"byte_end":7193636,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193641,"byte_end":7193655,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193660,"byte_end":7193663,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193668,"byte_end":7193675,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193680,"byte_end":7193744,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193749,"byte_end":7193793,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193798,"byte_end":7193801,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193806,"byte_end":7193836,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193841,"byte_end":7193877,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193882,"byte_end":7193920,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7193925,"byte_end":7193932,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194701,"byte_end":7194705,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194060,"byte_end":7194148,"line_start":258,"line_end":258,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194153,"byte_end":7194166,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194171,"byte_end":7194174,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194179,"byte_end":7194269,"line_start":261,"line_end":261,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194274,"byte_end":7194288,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194293,"byte_end":7194296,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194301,"byte_end":7194379,"line_start":264,"line_end":264,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194384,"byte_end":7194387,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194392,"byte_end":7194406,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194411,"byte_end":7194414,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194419,"byte_end":7194426,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194431,"byte_end":7194495,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194500,"byte_end":7194544,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194549,"byte_end":7194552,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194557,"byte_end":7194587,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194592,"byte_end":7194622,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194627,"byte_end":7194677,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194682,"byte_end":7194689,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7196052,"byte_end":7196067,"line_start":306,"line_end":306,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194876,"byte_end":7194972,"line_start":280,"line_end":280,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7194977,"byte_end":7195071,"line_start":281,"line_end":281,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195076,"byte_end":7195147,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195152,"byte_end":7195155,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195160,"byte_end":7195255,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195260,"byte_end":7195351,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195356,"byte_end":7195369,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195374,"byte_end":7195377,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195382,"byte_end":7195467,"line_start":288,"line_end":288,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195472,"byte_end":7195503,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195508,"byte_end":7195511,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195516,"byte_end":7195579,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195584,"byte_end":7195587,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195592,"byte_end":7195606,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195611,"byte_end":7195614,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195619,"byte_end":7195626,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195631,"byte_end":7195695,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195700,"byte_end":7195744,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195749,"byte_end":7195752,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195757,"byte_end":7195787,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195792,"byte_end":7195795,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195800,"byte_end":7195830,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195835,"byte_end":7195876,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195881,"byte_end":7195951,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7195956,"byte_end":7196028,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7196033,"byte_end":7196040,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198618,"byte_end":7198638,"line_start":376,"line_end":376,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7196732,"byte_end":7196828,"line_start":329,"line_end":329,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7196833,"byte_end":7196927,"line_start":330,"line_end":330,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7196932,"byte_end":7197003,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197008,"byte_end":7197011,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197016,"byte_end":7197110,"line_start":333,"line_end":333,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197115,"byte_end":7197210,"line_start":334,"line_end":334,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197215,"byte_end":7197305,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197310,"byte_end":7197394,"line_start":336,"line_end":336,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197399,"byte_end":7197402,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197407,"byte_end":7197492,"line_start":338,"line_end":338,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197497,"byte_end":7197528,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197533,"byte_end":7197536,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: struct.Atomic.html#method.compare_and_set","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197541,"byte_end":7197607,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197612,"byte_end":7197675,"line_start":342,"line_end":342,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197680,"byte_end":7197683,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197688,"byte_end":7197702,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197707,"byte_end":7197710,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197715,"byte_end":7197722,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197727,"byte_end":7197791,"line_start":347,"line_end":347,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197796,"byte_end":7197840,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197845,"byte_end":7197848,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197853,"byte_end":7197883,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197888,"byte_end":7197918,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197923,"byte_end":7197926,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197931,"byte_end":7197966,"line_start":353,"line_end":353,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7197971,"byte_end":7198011,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198016,"byte_end":7198026,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198031,"byte_end":7198094,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198099,"byte_end":7198121,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198126,"byte_end":7198150,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198155,"byte_end":7198177,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198182,"byte_end":7198195,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198200,"byte_end":7198225,"line_start":361,"line_end":361,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198230,"byte_end":7198264,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198269,"byte_end":7198299,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198304,"byte_end":7198317,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198322,"byte_end":7198331,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198336,"byte_end":7198341,"line_start":366,"line_end":366,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198346,"byte_end":7198349,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198354,"byte_end":7198395,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198400,"byte_end":7198410,"line_start":369,"line_end":369,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198415,"byte_end":7198490,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198495,"byte_end":7198522,"line_start":371,"line_end":371,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198527,"byte_end":7198570,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198575,"byte_end":7198584,"line_start":373,"line_end":373,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198589,"byte_end":7198594,"line_start":374,"line_end":374,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7198599,"byte_end":7198606,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200130,"byte_end":7200139,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199308,"byte_end":7199347,"line_start":399,"line_end":399,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199352,"byte_end":7199355,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199360,"byte_end":7199454,"line_start":401,"line_end":401,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199459,"byte_end":7199515,"line_start":402,"line_end":402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199520,"byte_end":7199523,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199528,"byte_end":7199618,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199623,"byte_end":7199637,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199642,"byte_end":7199645,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199650,"byte_end":7199728,"line_start":407,"line_end":407,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199733,"byte_end":7199736,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199741,"byte_end":7199755,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199760,"byte_end":7199763,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199768,"byte_end":7199775,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199780,"byte_end":7199837,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199842,"byte_end":7199886,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199891,"byte_end":7199894,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199899,"byte_end":7199959,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199964,"byte_end":7199994,"line_start":416,"line_end":416,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7199999,"byte_end":7200054,"line_start":417,"line_end":417,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200059,"byte_end":7200106,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200111,"byte_end":7200118,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201129,"byte_end":7201137,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200310,"byte_end":7200348,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200353,"byte_end":7200356,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200361,"byte_end":7200454,"line_start":426,"line_end":426,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200459,"byte_end":7200515,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200520,"byte_end":7200523,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200528,"byte_end":7200618,"line_start":429,"line_end":429,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200623,"byte_end":7200637,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200642,"byte_end":7200645,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200650,"byte_end":7200728,"line_start":432,"line_end":432,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200733,"byte_end":7200736,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200741,"byte_end":7200755,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200760,"byte_end":7200763,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200768,"byte_end":7200775,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200780,"byte_end":7200837,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200842,"byte_end":7200886,"line_start":438,"line_end":438,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200891,"byte_end":7200894,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200899,"byte_end":7200959,"line_start":440,"line_end":440,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200964,"byte_end":7200994,"line_start":441,"line_end":441,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7200999,"byte_end":7201053,"line_start":442,"line_end":442,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201058,"byte_end":7201105,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201110,"byte_end":7201117,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202128,"byte_end":7202137,"line_start":470,"line_end":470,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201306,"byte_end":7201345,"line_start":449,"line_end":449,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201350,"byte_end":7201353,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201358,"byte_end":7201452,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201457,"byte_end":7201513,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201518,"byte_end":7201521,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201526,"byte_end":7201616,"line_start":454,"line_end":454,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201621,"byte_end":7201635,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201640,"byte_end":7201643,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201648,"byte_end":7201726,"line_start":457,"line_end":457,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201731,"byte_end":7201734,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201739,"byte_end":7201753,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201758,"byte_end":7201761,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201766,"byte_end":7201773,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201778,"byte_end":7201835,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201840,"byte_end":7201884,"line_start":463,"line_end":463,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201889,"byte_end":7201892,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201897,"byte_end":7201957,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201962,"byte_end":7201992,"line_start":466,"line_end":466,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7201997,"byte_end":7202052,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202057,"byte_end":7202104,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202109,"byte_end":7202116,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203434,"byte_end":7203444,"line_start":508,"line_end":508,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202307,"byte_end":7202342,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202347,"byte_end":7202350,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202355,"byte_end":7202444,"line_start":476,"line_end":476,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202449,"byte_end":7202535,"line_start":477,"line_end":477,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202540,"byte_end":7202575,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202580,"byte_end":7202583,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202588,"byte_end":7202600,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202605,"byte_end":7202608,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202613,"byte_end":7202672,"line_start":482,"line_end":482,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202677,"byte_end":7202680,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202685,"byte_end":7202697,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202702,"byte_end":7202705,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202710,"byte_end":7202797,"line_start":486,"line_end":486,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202802,"byte_end":7202835,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202840,"byte_end":7202843,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202848,"byte_end":7202862,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202867,"byte_end":7202870,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202875,"byte_end":7202886,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202891,"byte_end":7202910,"line_start":492,"line_end":492,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202915,"byte_end":7202949,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202954,"byte_end":7202980,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7202985,"byte_end":7203012,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203017,"byte_end":7203022,"line_start":496,"line_end":496,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203027,"byte_end":7203030,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203035,"byte_end":7203068,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203073,"byte_end":7203101,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203106,"byte_end":7203200,"line_start":500,"line_end":500,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203205,"byte_end":7203252,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203257,"byte_end":7203277,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203282,"byte_end":7203361,"line_start":503,"line_end":503,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203366,"byte_end":7203379,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203384,"byte_end":7203393,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203398,"byte_end":7203403,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203408,"byte_end":7203415,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205914,"byte_end":7205921,"line_start":611,"line_end":611,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205851,"byte_end":7205903,"line_start":610,"line_end":610,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205993,"byte_end":7206003,"line_start":613,"line_end":613,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205931,"byte_end":7205985,"line_start":612,"line_end":612,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206104,"byte_end":7206114,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.\n","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206025,"byte_end":7206089,"line_start":615,"line_end":615,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206380,"byte_end":7206385,"line_start":625,"line_end":625,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206140,"byte_end":7206175,"line_start":619,"line_end":619,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206176,"byte_end":7206179,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206180,"byte_end":7206222,"line_start":621,"line_end":621,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206223,"byte_end":7206226,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206227,"byte_end":7206325,"line_start":623,"line_end":623,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206326,"byte_end":7206368,"line_start":624,"line_end":624,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207231,"byte_end":7207234,"line_start":663,"line_end":663,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207001,"byte_end":7207082,"line_start":654,"line_end":654,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207087,"byte_end":7207090,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207095,"byte_end":7207109,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207114,"byte_end":7207117,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207122,"byte_end":7207129,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207134,"byte_end":7207165,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207170,"byte_end":7207173,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207178,"byte_end":7207207,"line_start":661,"line_end":661,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207212,"byte_end":7207219,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207868,"byte_end":7207876,"line_start":684,"line_end":684,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207306,"byte_end":7207356,"line_start":667,"line_end":667,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207361,"byte_end":7207364,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207369,"byte_end":7207461,"line_start":669,"line_end":669,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207466,"byte_end":7207559,"line_start":670,"line_end":670,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207564,"byte_end":7207589,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207594,"byte_end":7207597,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207602,"byte_end":7207614,"line_start":673,"line_end":673,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207619,"byte_end":7207622,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207627,"byte_end":7207671,"line_start":675,"line_end":675,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207676,"byte_end":7207679,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207684,"byte_end":7207698,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207703,"byte_end":7207706,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207711,"byte_end":7207718,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207723,"byte_end":7207754,"line_start":680,"line_end":680,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207759,"byte_end":7207762,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207767,"byte_end":7207837,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207842,"byte_end":7207849,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208318,"byte_end":7208329,"line_start":702,"line_end":702,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7207983,"byte_end":7208032,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208037,"byte_end":7208040,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208045,"byte_end":7208059,"line_start":691,"line_end":691,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208064,"byte_end":7208067,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208072,"byte_end":7208079,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208084,"byte_end":7208132,"line_start":694,"line_end":694,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208137,"byte_end":7208140,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208145,"byte_end":7208174,"line_start":696,"line_end":696,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208179,"byte_end":7208209,"line_start":697,"line_end":697,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208214,"byte_end":7208247,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208252,"byte_end":7208259,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208264,"byte_end":7208267,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208272,"byte_end":7208306,"line_start":701,"line_end":701,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208721,"byte_end":7208729,"line_start":717,"line_end":717,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208441,"byte_end":7208485,"line_start":706,"line_end":706,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208490,"byte_end":7208493,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208498,"byte_end":7208512,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208517,"byte_end":7208520,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208525,"byte_end":7208532,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208537,"byte_end":7208585,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208590,"byte_end":7208593,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208598,"byte_end":7208627,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208632,"byte_end":7208667,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208672,"byte_end":7208697,"line_start":715,"line_end":715,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208702,"byte_end":7208709,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209087,"byte_end":7209090,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208879,"byte_end":7208925,"line_start":723,"line_end":723,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208930,"byte_end":7208933,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208938,"byte_end":7208952,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208957,"byte_end":7208960,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208965,"byte_end":7208972,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7208977,"byte_end":7209008,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209013,"byte_end":7209016,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209021,"byte_end":7209063,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209068,"byte_end":7209075,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209564,"byte_end":7209572,"line_start":750,"line_end":750,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209187,"byte_end":7209277,"line_start":737,"line_end":737,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209282,"byte_end":7209320,"line_start":738,"line_end":738,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209325,"byte_end":7209328,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209333,"byte_end":7209347,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209352,"byte_end":7209355,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209360,"byte_end":7209367,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209372,"byte_end":7209403,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209408,"byte_end":7209411,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209416,"byte_end":7209445,"line_start":745,"line_end":745,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209450,"byte_end":7209477,"line_start":746,"line_end":746,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209482,"byte_end":7209508,"line_start":747,"line_end":747,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209513,"byte_end":7209540,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209545,"byte_end":7209552,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211852,"byte_end":7211858,"line_start":853,"line_end":853,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211573,"byte_end":7211626,"line_start":847,"line_end":847,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211627,"byte_end":7211630,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211631,"byte_end":7211694,"line_start":849,"line_end":849,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211695,"byte_end":7211698,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211699,"byte_end":7211797,"line_start":851,"line_end":851,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211798,"byte_end":7211840,"line_start":852,"line_end":852,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212665,"byte_end":7212669,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212449,"byte_end":7212480,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212485,"byte_end":7212488,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212493,"byte_end":7212507,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212512,"byte_end":7212515,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212520,"byte_end":7212527,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212532,"byte_end":7212564,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212569,"byte_end":7212572,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212577,"byte_end":7212611,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212616,"byte_end":7212641,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212646,"byte_end":7212653,"line_start":894,"line_end":894,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213226,"byte_end":7213233,"line_start":916,"line_end":916,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212784,"byte_end":7212826,"line_start":902,"line_end":902,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212831,"byte_end":7212834,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212839,"byte_end":7212853,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212858,"byte_end":7212861,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212866,"byte_end":7212873,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212878,"byte_end":7212934,"line_start":907,"line_end":907,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212939,"byte_end":7212983,"line_start":908,"line_end":908,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212988,"byte_end":7212991,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212996,"byte_end":7213023,"line_start":910,"line_end":910,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213028,"byte_end":7213058,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213063,"byte_end":7213108,"line_start":912,"line_end":912,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213113,"byte_end":7213151,"line_start":913,"line_end":913,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213156,"byte_end":7213202,"line_start":914,"line_end":914,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213207,"byte_end":7213214,"line_start":915,"line_end":915,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213764,"byte_end":7213770,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213294,"byte_end":7213354,"line_start":920,"line_end":920,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213359,"byte_end":7213362,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213367,"byte_end":7213381,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213386,"byte_end":7213389,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213394,"byte_end":7213401,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213406,"byte_end":7213462,"line_start":925,"line_end":925,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213467,"byte_end":7213511,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213516,"byte_end":7213519,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213524,"byte_end":7213553,"line_start":928,"line_end":928,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213558,"byte_end":7213588,"line_start":929,"line_end":929,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213593,"byte_end":7213621,"line_start":930,"line_end":930,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213626,"byte_end":7213629,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213634,"byte_end":7213664,"line_start":932,"line_end":932,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213669,"byte_end":7213703,"line_start":933,"line_end":933,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213708,"byte_end":7213740,"line_start":934,"line_end":934,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213745,"byte_end":7213752,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215049,"byte_end":7215054,"line_start":972,"line_end":972,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213870,"byte_end":7213899,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213904,"byte_end":7213907,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213912,"byte_end":7213990,"line_start":943,"line_end":943,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7213995,"byte_end":7213998,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214003,"byte_end":7214015,"line_start":945,"line_end":945,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214020,"byte_end":7214023,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214028,"byte_end":7214113,"line_start":947,"line_end":947,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214118,"byte_end":7214121,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214126,"byte_end":7214216,"line_start":949,"line_end":949,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214221,"byte_end":7214270,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214275,"byte_end":7214278,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214283,"byte_end":7214355,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214360,"byte_end":7214435,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214440,"byte_end":7214443,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214448,"byte_end":7214541,"line_start":955,"line_end":955,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214546,"byte_end":7214639,"line_start":956,"line_end":956,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214644,"byte_end":7214682,"line_start":957,"line_end":957,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214687,"byte_end":7214690,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214695,"byte_end":7214709,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214714,"byte_end":7214717,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214722,"byte_end":7214729,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214734,"byte_end":7214783,"line_start":962,"line_end":962,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214788,"byte_end":7214832,"line_start":963,"line_end":963,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214837,"byte_end":7214840,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214845,"byte_end":7214875,"line_start":965,"line_end":965,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214880,"byte_end":7214910,"line_start":966,"line_end":966,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214915,"byte_end":7214949,"line_start":967,"line_end":967,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214954,"byte_end":7214966,"line_start":968,"line_end":968,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7214971,"byte_end":7215008,"line_start":969,"line_end":969,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215013,"byte_end":7215018,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215023,"byte_end":7215030,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216268,"byte_end":7216277,"line_start":1012,"line_end":1012,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215108,"byte_end":7215137,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215142,"byte_end":7215145,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215150,"byte_end":7215236,"line_start":978,"line_end":978,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215241,"byte_end":7215244,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215249,"byte_end":7215261,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215266,"byte_end":7215269,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215274,"byte_end":7215369,"line_start":982,"line_end":982,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215374,"byte_end":7215411,"line_start":983,"line_end":983,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215416,"byte_end":7215419,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215424,"byte_end":7215513,"line_start":985,"line_end":985,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215518,"byte_end":7215521,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215526,"byte_end":7215600,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215605,"byte_end":7215608,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215613,"byte_end":7215627,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215632,"byte_end":7215635,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215640,"byte_end":7215647,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215652,"byte_end":7215701,"line_start":992,"line_end":992,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215706,"byte_end":7215750,"line_start":993,"line_end":993,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215755,"byte_end":7215758,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215763,"byte_end":7215805,"line_start":995,"line_end":995,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215810,"byte_end":7215840,"line_start":996,"line_end":996,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215845,"byte_end":7215848,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215853,"byte_end":7215891,"line_start":998,"line_end":998,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215896,"byte_end":7215908,"line_start":999,"line_end":999,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215913,"byte_end":7215943,"line_start":1000,"line_end":1000,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215948,"byte_end":7215978,"line_start":1001,"line_end":1001,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7215983,"byte_end":7216024,"line_start":1002,"line_end":1002,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216029,"byte_end":7216047,"line_start":1003,"line_end":1003,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216052,"byte_end":7216096,"line_start":1004,"line_end":1004,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216101,"byte_end":7216106,"line_start":1005,"line_end":1005,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216111,"byte_end":7216114,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216119,"byte_end":7216153,"line_start":1007,"line_end":1007,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216158,"byte_end":7216170,"line_start":1008,"line_end":1008,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216175,"byte_end":7216227,"line_start":1009,"line_end":1009,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216232,"byte_end":7216237,"line_start":1010,"line_end":1010,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216242,"byte_end":7216249,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217569,"byte_end":7217575,"line_start":1047,"line_end":1047,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216355,"byte_end":7216395,"line_start":1016,"line_end":1016,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216400,"byte_end":7216403,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216408,"byte_end":7216503,"line_start":1018,"line_end":1018,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216508,"byte_end":7216511,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216516,"byte_end":7216528,"line_start":1020,"line_end":1020,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216533,"byte_end":7216536,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216541,"byte_end":7216626,"line_start":1022,"line_end":1022,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216631,"byte_end":7216634,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216639,"byte_end":7216729,"line_start":1024,"line_end":1024,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216734,"byte_end":7216783,"line_start":1025,"line_end":1025,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216788,"byte_end":7216791,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216796,"byte_end":7216868,"line_start":1027,"line_end":1027,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216873,"byte_end":7216948,"line_start":1028,"line_end":1028,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216953,"byte_end":7216956,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7216961,"byte_end":7217054,"line_start":1030,"line_end":1030,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217059,"byte_end":7217152,"line_start":1031,"line_end":1031,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217157,"byte_end":7217195,"line_start":1032,"line_end":1032,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217200,"byte_end":7217203,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217208,"byte_end":7217222,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217227,"byte_end":7217230,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217235,"byte_end":7217242,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217247,"byte_end":7217296,"line_start":1037,"line_end":1037,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217301,"byte_end":7217345,"line_start":1038,"line_end":1038,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217350,"byte_end":7217353,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217358,"byte_end":7217388,"line_start":1040,"line_end":1040,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217393,"byte_end":7217423,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217428,"byte_end":7217462,"line_start":1042,"line_end":1042,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217467,"byte_end":7217479,"line_start":1043,"line_end":1043,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217484,"byte_end":7217528,"line_start":1044,"line_end":1044,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217533,"byte_end":7217538,"line_start":1045,"line_end":1045,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217543,"byte_end":7217550,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218314,"byte_end":7218324,"line_start":1075,"line_end":1075,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217644,"byte_end":7217679,"line_start":1051,"line_end":1051,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217684,"byte_end":7217687,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217692,"byte_end":7217704,"line_start":1053,"line_end":1053,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217709,"byte_end":7217712,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217717,"byte_end":7217776,"line_start":1055,"line_end":1055,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217781,"byte_end":7217784,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217789,"byte_end":7217801,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217806,"byte_end":7217809,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217814,"byte_end":7217901,"line_start":1059,"line_end":1059,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217906,"byte_end":7217939,"line_start":1060,"line_end":1060,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217944,"byte_end":7217947,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217952,"byte_end":7217966,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217971,"byte_end":7217974,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217979,"byte_end":7217986,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7217991,"byte_end":7218040,"line_start":1065,"line_end":1065,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218045,"byte_end":7218089,"line_start":1066,"line_end":1066,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218094,"byte_end":7218097,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218102,"byte_end":7218132,"line_start":1068,"line_end":1068,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218137,"byte_end":7218149,"line_start":1069,"line_end":1069,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218154,"byte_end":7218196,"line_start":1070,"line_end":1070,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218201,"byte_end":7218239,"line_start":1071,"line_end":1071,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218244,"byte_end":7218273,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218278,"byte_end":7218283,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218288,"byte_end":7218295,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218931,"byte_end":7218934,"line_start":1096,"line_end":1096,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218523,"byte_end":7218569,"line_start":1083,"line_end":1083,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218574,"byte_end":7218577,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218582,"byte_end":7218596,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218601,"byte_end":7218604,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218609,"byte_end":7218616,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218621,"byte_end":7218677,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218682,"byte_end":7218726,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218731,"byte_end":7218734,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218739,"byte_end":7218801,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218806,"byte_end":7218836,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218841,"byte_end":7218875,"line_start":1093,"line_end":1093,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218880,"byte_end":7218907,"line_start":1094,"line_end":1094,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7218912,"byte_end":7218919,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219609,"byte_end":7219617,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219031,"byte_end":7219121,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219126,"byte_end":7219164,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219169,"byte_end":7219172,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219177,"byte_end":7219191,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219196,"byte_end":7219199,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219204,"byte_end":7219211,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219216,"byte_end":7219265,"line_start":1107,"line_end":1107,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219270,"byte_end":7219314,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219319,"byte_end":7219322,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219327,"byte_end":7219357,"line_start":1110,"line_end":1110,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219362,"byte_end":7219392,"line_start":1111,"line_end":1111,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219397,"byte_end":7219432,"line_start":1112,"line_end":1112,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219437,"byte_end":7219465,"line_start":1113,"line_end":1113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219470,"byte_end":7219473,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219478,"byte_end":7219506,"line_start":1115,"line_end":1115,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219511,"byte_end":7219539,"line_start":1116,"line_end":1116,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219544,"byte_end":7219585,"line_start":1117,"line_end":1117,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219590,"byte_end":7219597,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7221945,"byte_end":7221954,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":251}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7221896,"byte_end":7221933,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222126,"byte_end":7222129,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222086,"byte_end":7222114,"line_start":30,"line_end":30,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222285,"byte_end":7222293,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222228,"byte_end":7222273,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222957,"byte_end":7222968,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":265}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222909,"byte_end":7222945,"line_start":66,"line_end":66,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223079,"byte_end":7223082,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223033,"byte_end":7223053,"line_start":72,"line_end":72,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223058,"byte_end":7223067,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223220,"byte_end":7223229,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223151,"byte_end":7223194,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223199,"byte_end":7223208,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223385,"byte_end":7223394,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223303,"byte_end":7223359,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223364,"byte_end":7223373,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242016,"byte_end":7242021,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":322}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240292,"byte_end":7240341,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240342,"byte_end":7240345,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240346,"byte_end":7240359,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240360,"byte_end":7240363,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240364,"byte_end":7240443,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240444,"byte_end":7240447,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240448,"byte_end":7240455,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240456,"byte_end":7240489,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240490,"byte_end":7240493,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240494,"byte_end":7240592,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240593,"byte_end":7240685,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240686,"byte_end":7240716,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240717,"byte_end":7240724,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240725,"byte_end":7240728,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240729,"byte_end":7240805,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240806,"byte_end":7240809,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240810,"byte_end":7240837,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240838,"byte_end":7240841,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240842,"byte_end":7240929,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240930,"byte_end":7240946,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240947,"byte_end":7240950,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240951,"byte_end":7240958,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7240959,"byte_end":7241015,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241016,"byte_end":7241060,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241061,"byte_end":7241064,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241065,"byte_end":7241103,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241104,"byte_end":7241133,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241134,"byte_end":7241137,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241138,"byte_end":7241168,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241169,"byte_end":7241199,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241200,"byte_end":7241203,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241204,"byte_end":7241278,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241279,"byte_end":7241313,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241314,"byte_end":7241317,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241318,"byte_end":7241369,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241370,"byte_end":7241416,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241417,"byte_end":7241460,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241461,"byte_end":7241466,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241467,"byte_end":7241474,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241475,"byte_end":7241478,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241479,"byte_end":7241500,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241501,"byte_end":7241504,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241505,"byte_end":7241600,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241601,"byte_end":7241699,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241700,"byte_end":7241719,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241720,"byte_end":7241723,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241724,"byte_end":7241731,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241732,"byte_end":7241765,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241766,"byte_end":7241769,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241770,"byte_end":7241800,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241801,"byte_end":7241831,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241832,"byte_end":7241864,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241865,"byte_end":7241882,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241883,"byte_end":7241915,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241916,"byte_end":7241933,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241934,"byte_end":7241967,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241968,"byte_end":7241975,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241976,"byte_end":7241979,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7241980,"byte_end":7242004,"line_start":67,"line_end":67,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243049,"byte_end":7243054,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242080,"byte_end":7242169,"line_start":73,"line_end":73,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242174,"byte_end":7242199,"line_start":74,"line_end":74,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242204,"byte_end":7242207,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242212,"byte_end":7242305,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242310,"byte_end":7242398,"line_start":77,"line_end":77,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242403,"byte_end":7242493,"line_start":78,"line_end":78,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242498,"byte_end":7242538,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242543,"byte_end":7242546,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242551,"byte_end":7242641,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242646,"byte_end":7242737,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242742,"byte_end":7242829,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242834,"byte_end":7242854,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242859,"byte_end":7242862,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242867,"byte_end":7242954,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242959,"byte_end":7242984,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242989,"byte_end":7242992,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242997,"byte_end":7243037,"line_start":89,"line_end":89,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247407,"byte_end":7247422,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243218,"byte_end":7243307,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243312,"byte_end":7243337,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243342,"byte_end":7243345,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243350,"byte_end":7243443,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243448,"byte_end":7243536,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243541,"byte_end":7243631,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243636,"byte_end":7243676,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243681,"byte_end":7243684,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243689,"byte_end":7243779,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243784,"byte_end":7243875,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243880,"byte_end":7243967,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243972,"byte_end":7243992,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7243997,"byte_end":7244000,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244005,"byte_end":7244092,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244097,"byte_end":7244122,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244127,"byte_end":7244130,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244135,"byte_end":7244147,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244152,"byte_end":7244155,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244160,"byte_end":7244252,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244257,"byte_end":7244344,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244349,"byte_end":7244361,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244366,"byte_end":7244369,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244374,"byte_end":7244381,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244386,"byte_end":7244419,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244424,"byte_end":7244427,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244432,"byte_end":7244462,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244467,"byte_end":7244494,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244499,"byte_end":7244511,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244516,"byte_end":7244591,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244596,"byte_end":7244635,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244640,"byte_end":7244676,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244681,"byte_end":7244692,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244697,"byte_end":7244702,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244707,"byte_end":7244714,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244719,"byte_end":7244722,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244727,"byte_end":7244821,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244826,"byte_end":7244857,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244862,"byte_end":7244865,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244870,"byte_end":7244965,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7244970,"byte_end":7245062,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245067,"byte_end":7245156,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245161,"byte_end":7245164,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245169,"byte_end":7245182,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245187,"byte_end":7245240,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245245,"byte_end":7245327,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245332,"byte_end":7245339,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245344,"byte_end":7245347,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245352,"byte_end":7245445,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245450,"byte_end":7245545,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245550,"byte_end":7245610,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245615,"byte_end":7245618,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245623,"byte_end":7245637,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245642,"byte_end":7245645,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245650,"byte_end":7245736,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245741,"byte_end":7245835,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245840,"byte_end":7245936,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7245941,"byte_end":7246033,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246038,"byte_end":7246094,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246099,"byte_end":7246102,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246107,"byte_end":7246114,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246119,"byte_end":7246175,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246180,"byte_end":7246224,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246229,"byte_end":7246232,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246237,"byte_end":7246268,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246273,"byte_end":7246276,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246281,"byte_end":7246358,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246363,"byte_end":7246394,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246399,"byte_end":7246402,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246407,"byte_end":7246437,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246442,"byte_end":7246472,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246477,"byte_end":7246480,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246485,"byte_end":7246562,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246567,"byte_end":7246639,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246644,"byte_end":7246647,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246652,"byte_end":7246673,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246678,"byte_end":7246738,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246743,"byte_end":7246825,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246830,"byte_end":7246846,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246851,"byte_end":7246930,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246935,"byte_end":7246978,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7246983,"byte_end":7247051,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247056,"byte_end":7247148,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247153,"byte_end":7247237,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247242,"byte_end":7247279,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247284,"byte_end":7247299,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247304,"byte_end":7247313,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247318,"byte_end":7247323,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247328,"byte_end":7247335,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247340,"byte_end":7247343,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247348,"byte_end":7247388,"line_start":189,"line_end":189,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251062,"byte_end":7251075,"line_start":271,"line_end":271,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247661,"byte_end":7247754,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247759,"byte_end":7247811,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247816,"byte_end":7247819,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247824,"byte_end":7247917,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7247922,"byte_end":7248012,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248017,"byte_end":7248106,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248111,"byte_end":7248165,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248170,"byte_end":7248173,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248178,"byte_end":7248271,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248276,"byte_end":7248369,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248374,"byte_end":7248467,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248472,"byte_end":7248503,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248508,"byte_end":7248511,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248516,"byte_end":7248605,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248610,"byte_end":7248635,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248640,"byte_end":7248643,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248648,"byte_end":7248660,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248665,"byte_end":7248668,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248673,"byte_end":7248766,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248771,"byte_end":7248804,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248809,"byte_end":7248812,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248817,"byte_end":7248912,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248917,"byte_end":7248955,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248960,"byte_end":7248963,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7248968,"byte_end":7249063,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249068,"byte_end":7249160,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249165,"byte_end":7249254,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249259,"byte_end":7249262,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249267,"byte_end":7249280,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249285,"byte_end":7249338,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249343,"byte_end":7249402,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249407,"byte_end":7249414,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249419,"byte_end":7249422,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249427,"byte_end":7249521,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249526,"byte_end":7249613,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249618,"byte_end":7249678,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249683,"byte_end":7249686,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249691,"byte_end":7249705,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249710,"byte_end":7249713,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249718,"byte_end":7249804,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249809,"byte_end":7249903,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7249908,"byte_end":7250004,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250009,"byte_end":7250101,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250106,"byte_end":7250162,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250167,"byte_end":7250170,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250175,"byte_end":7250182,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250187,"byte_end":7250243,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250248,"byte_end":7250292,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250297,"byte_end":7250300,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250305,"byte_end":7250336,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250341,"byte_end":7250344,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250349,"byte_end":7250426,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250431,"byte_end":7250462,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250467,"byte_end":7250470,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250475,"byte_end":7250505,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250510,"byte_end":7250540,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250545,"byte_end":7250548,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250553,"byte_end":7250630,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250635,"byte_end":7250707,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250712,"byte_end":7250715,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250720,"byte_end":7250741,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250746,"byte_end":7250806,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250811,"byte_end":7250893,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250898,"byte_end":7250914,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250919,"byte_end":7250954,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250959,"byte_end":7250968,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250973,"byte_end":7250978,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250983,"byte_end":7250990,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7250995,"byte_end":7250998,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251003,"byte_end":7251043,"line_start":270,"line_end":270,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252048,"byte_end":7252053,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251171,"byte_end":7251266,"line_start":275,"line_end":275,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251271,"byte_end":7251288,"line_start":276,"line_end":276,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251293,"byte_end":7251296,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251301,"byte_end":7251395,"line_start":278,"line_end":278,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251400,"byte_end":7251492,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251497,"byte_end":7251565,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251570,"byte_end":7251573,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251578,"byte_end":7251670,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251675,"byte_end":7251678,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251683,"byte_end":7251697,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251702,"byte_end":7251705,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251710,"byte_end":7251717,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251722,"byte_end":7251755,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251760,"byte_end":7251763,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251768,"byte_end":7251798,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251803,"byte_end":7251815,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/     guard.defer(move || {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251820,"byte_end":7251849,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/         println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251854,"byte_end":7251922,"line_start":292,"line_end":292,"column_start":5,"column_end":73}},{"value":"/     });","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251927,"byte_end":7251938,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251943,"byte_end":7251948,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251953,"byte_end":7251971,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251976,"byte_end":7251983,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251988,"byte_end":7251991,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7251996,"byte_end":7252036,"line_start":298,"line_end":298,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253326,"byte_end":7253331,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252177,"byte_end":7252228,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252233,"byte_end":7252236,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252241,"byte_end":7252331,"line_start":307,"line_end":307,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252336,"byte_end":7252430,"line_start":308,"line_end":308,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252435,"byte_end":7252529,"line_start":309,"line_end":309,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252534,"byte_end":7252586,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252591,"byte_end":7252594,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252599,"byte_end":7252692,"line_start":312,"line_end":312,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252697,"byte_end":7252700,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252705,"byte_end":7252719,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252724,"byte_end":7252727,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252732,"byte_end":7252739,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252744,"byte_end":7252793,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252798,"byte_end":7252842,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252847,"byte_end":7252867,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252872,"byte_end":7252900,"line_start":320,"line_end":320,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252905,"byte_end":7252908,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252913,"byte_end":7252942,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252947,"byte_end":7252980,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252985,"byte_end":7252990,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7252995,"byte_end":7253034,"line_start":325,"line_end":325,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253039,"byte_end":7253093,"line_start":326,"line_end":326,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253098,"byte_end":7253103,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253108,"byte_end":7253126,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253131,"byte_end":7253136,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253141,"byte_end":7253180,"line_start":330,"line_end":330,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253185,"byte_end":7253239,"line_start":331,"line_end":331,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253244,"byte_end":7253249,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253254,"byte_end":7253261,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253266,"byte_end":7253269,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253274,"byte_end":7253314,"line_start":335,"line_end":335,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254711,"byte_end":7254722,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253455,"byte_end":7253546,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253551,"byte_end":7253554,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253559,"byte_end":7253650,"line_start":344,"line_end":344,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253655,"byte_end":7253751,"line_start":345,"line_end":345,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253756,"byte_end":7253850,"line_start":346,"line_end":346,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253855,"byte_end":7253874,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253879,"byte_end":7253882,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253887,"byte_end":7253981,"line_start":349,"line_end":349,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7253986,"byte_end":7254028,"line_start":350,"line_end":350,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254033,"byte_end":7254036,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254041,"byte_end":7254055,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254060,"byte_end":7254063,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254068,"byte_end":7254075,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254080,"byte_end":7254129,"line_start":355,"line_end":355,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254134,"byte_end":7254178,"line_start":356,"line_end":356,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254183,"byte_end":7254203,"line_start":357,"line_end":357,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254208,"byte_end":7254236,"line_start":358,"line_end":358,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254241,"byte_end":7254244,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254249,"byte_end":7254278,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254283,"byte_end":7254316,"line_start":361,"line_end":361,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254321,"byte_end":7254326,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254331,"byte_end":7254370,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254375,"byte_end":7254429,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254434,"byte_end":7254439,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254444,"byte_end":7254511,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254516,"byte_end":7254521,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254526,"byte_end":7254565,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254570,"byte_end":7254624,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254629,"byte_end":7254634,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254639,"byte_end":7254646,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254651,"byte_end":7254654,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7254659,"byte_end":7254699,"line_start":373,"line_end":373,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255929,"byte_end":7255938,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255327,"byte_end":7255382,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255387,"byte_end":7255390,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255395,"byte_end":7255470,"line_start":398,"line_end":398,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255475,"byte_end":7255525,"line_start":399,"line_end":399,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255530,"byte_end":7255533,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255538,"byte_end":7255622,"line_start":401,"line_end":401,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255627,"byte_end":7255630,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255635,"byte_end":7255649,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255654,"byte_end":7255657,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255662,"byte_end":7255669,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255674,"byte_end":7255707,"line_start":406,"line_end":406,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255712,"byte_end":7255715,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255720,"byte_end":7255754,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/ let mut guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255759,"byte_end":7255793,"line_start":409,"line_end":409,"column_start":5,"column_end":39}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255798,"byte_end":7255852,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255857,"byte_end":7255864,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255869,"byte_end":7255872,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7255877,"byte_end":7255917,"line_start":413,"line_end":413,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259256,"byte_end":7259267,"line_start":520,"line_end":520,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256344,"byte_end":7256431,"line_start":434,"line_end":434,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256432,"byte_end":7256435,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256436,"byte_end":7256531,"line_start":436,"line_end":436,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256532,"byte_end":7256621,"line_start":437,"line_end":437,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256622,"byte_end":7256625,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256626,"byte_end":7256719,"line_start":439,"line_end":439,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256720,"byte_end":7256757,"line_start":440,"line_end":440,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256758,"byte_end":7256761,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256762,"byte_end":7256858,"line_start":442,"line_end":442,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256859,"byte_end":7256862,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256863,"byte_end":7256875,"line_start":444,"line_end":444,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256876,"byte_end":7256879,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256880,"byte_end":7256970,"line_start":446,"line_end":446,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256971,"byte_end":7257038,"line_start":447,"line_end":447,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257039,"byte_end":7257042,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257043,"byte_end":7257057,"line_start":449,"line_end":449,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257058,"byte_end":7257061,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257062,"byte_end":7257069,"line_start":451,"line_end":451,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257070,"byte_end":7257119,"line_start":452,"line_end":452,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257120,"byte_end":7257165,"line_start":453,"line_end":453,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257166,"byte_end":7257169,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257170,"byte_end":7257197,"line_start":455,"line_end":455,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257198,"byte_end":7257201,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257202,"byte_end":7257214,"line_start":457,"line_end":457,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257215,"byte_end":7257270,"line_start":458,"line_end":458,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257271,"byte_end":7257317,"line_start":459,"line_end":459,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257318,"byte_end":7257321,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257322,"byte_end":7257396,"line_start":461,"line_end":461,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257397,"byte_end":7257447,"line_start":462,"line_end":462,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257448,"byte_end":7257451,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257452,"byte_end":7257481,"line_start":464,"line_end":464,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257482,"byte_end":7257538,"line_start":465,"line_end":465,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257539,"byte_end":7257550,"line_start":466,"line_end":466,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257551,"byte_end":7257554,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257555,"byte_end":7257636,"line_start":468,"line_end":468,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257637,"byte_end":7257642,"line_start":469,"line_end":469,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257643,"byte_end":7257650,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257651,"byte_end":7257654,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257655,"byte_end":7257749,"line_start":472,"line_end":472,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257750,"byte_end":7257753,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257754,"byte_end":7257848,"line_start":474,"line_end":474,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257849,"byte_end":7257934,"line_start":475,"line_end":475,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257935,"byte_end":7257938,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7257939,"byte_end":7258038,"line_start":477,"line_end":477,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258039,"byte_end":7258137,"line_start":478,"line_end":478,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258138,"byte_end":7258158,"line_start":479,"line_end":479,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258159,"byte_end":7258162,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258163,"byte_end":7258170,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258171,"byte_end":7258220,"line_start":482,"line_end":482,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258221,"byte_end":7258252,"line_start":483,"line_end":483,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258253,"byte_end":7258298,"line_start":484,"line_end":484,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258299,"byte_end":7258302,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258303,"byte_end":7258324,"line_start":486,"line_end":486,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258325,"byte_end":7258355,"line_start":487,"line_end":487,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258356,"byte_end":7258361,"line_start":488,"line_end":488,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258362,"byte_end":7258365,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258366,"byte_end":7258386,"line_start":490,"line_end":490,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258387,"byte_end":7258417,"line_start":491,"line_end":491,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258418,"byte_end":7258448,"line_start":492,"line_end":492,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258449,"byte_end":7258454,"line_start":493,"line_end":493,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258455,"byte_end":7258458,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258459,"byte_end":7258490,"line_start":495,"line_end":495,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258491,"byte_end":7258519,"line_start":496,"line_end":496,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258520,"byte_end":7258540,"line_start":497,"line_end":497,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258541,"byte_end":7258577,"line_start":498,"line_end":498,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258578,"byte_end":7258655,"line_start":499,"line_end":499,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258656,"byte_end":7258659,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258660,"byte_end":7258711,"line_start":501,"line_end":501,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258712,"byte_end":7258752,"line_start":502,"line_end":502,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258753,"byte_end":7258827,"line_start":503,"line_end":503,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258828,"byte_end":7258831,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258832,"byte_end":7258920,"line_start":505,"line_end":505,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258921,"byte_end":7258971,"line_start":506,"line_end":506,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7258972,"byte_end":7259024,"line_start":507,"line_end":507,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259025,"byte_end":7259053,"line_start":508,"line_end":508,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259054,"byte_end":7259057,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259058,"byte_end":7259090,"line_start":510,"line_end":510,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259091,"byte_end":7259108,"line_start":511,"line_end":511,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259109,"byte_end":7259122,"line_start":512,"line_end":512,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259123,"byte_end":7259132,"line_start":513,"line_end":513,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259133,"byte_end":7259138,"line_start":514,"line_end":514,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259139,"byte_end":7259146,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259147,"byte_end":7259150,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259151,"byte_end":7259185,"line_start":517,"line_end":517,"column_start":1,"column_end":35}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259186,"byte_end":7259231,"line_start":518,"line_end":518,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7259232,"byte_end":7259241,"line_start":519,"line_end":519,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":8453363,"byte_end":8453366,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":8453317,"byte_end":8453345,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":8453346,"byte_end":8453355,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":8453491,"byte_end":8453500,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":8453422,"byte_end":8453473,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":8453474,"byte_end":8453483,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":8453610,"byte_end":8453627,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":8453561,"byte_end":8453602,"line_start":32,"line_end":32,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187299,"byte_end":7187317,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188491,"byte_end":7188499,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190317,"byte_end":7190323,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190367,"byte_end":7190373,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190389,"byte_end":7190395,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":87},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203547,"byte_end":7203553,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203877,"byte_end":7203883,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7204113,"byte_end":7204119,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7204446,"byte_end":7204452,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7204544,"byte_end":7204550,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7204945,"byte_end":7204951,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205054,"byte_end":7205060,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205160,"byte_end":7205166,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205515,"byte_end":7205521,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206468,"byte_end":7206473,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206986,"byte_end":7206991,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209736,"byte_end":7209741,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209924,"byte_end":7209929,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210204,"byte_end":7210209,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210330,"byte_end":7210335,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210501,"byte_end":7210506,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210665,"byte_end":7210670,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210760,"byte_end":7210765,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211218,"byte_end":7211223,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211308,"byte_end":7211313,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211410,"byte_end":7211415,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211496,"byte_end":7211501,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211960,"byte_end":7211966,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212126,"byte_end":7212132,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212171,"byte_end":7212177,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212429,"byte_end":7212435,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219768,"byte_end":7219774,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220300,"byte_end":7220306,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220417,"byte_end":7220423,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220477,"byte_end":7220483,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220632,"byte_end":7220638,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220770,"byte_end":7220776,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7221060,"byte_end":7221066,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7221213,"byte_end":7221219,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222017,"byte_end":7222026,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222051,"byte_end":7222060,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222070,"byte_end":7222079,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222372,"byte_end":7222381,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222579,"byte_end":7222588,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222712,"byte_end":7222721,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222895,"byte_end":7222904,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223015,"byte_end":7223026,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223486,"byte_end":7223497,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223644,"byte_end":7223655,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":7233591,"byte_end":7233599,"line_start":27,"line_end":27,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":7233719,"byte_end":7233727,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":7237358,"byte_end":7237363,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":7239118,"byte_end":7239129,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242068,"byte_end":7242073,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256063,"byte_end":7256068,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256238,"byte_end":7256243,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7262768,"byte_end":7262771,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7262781,"byte_end":7262784,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7263711,"byte_end":7263714,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7267223,"byte_end":7267226,"line_start":195,"line_end":195,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7267625,"byte_end":7267628,"line_start":207,"line_end":207,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7268050,"byte_end":7268059,"line_start":225,"line_end":225,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7268069,"byte_end":7268078,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7268753,"byte_end":7268759,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7273498,"byte_end":7273503,"line_start":378,"line_end":378,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7282026,"byte_end":7282031,"line_start":598,"line_end":598,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7288004,"byte_end":7288009,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7288145,"byte_end":7288150,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7288656,"byte_end":7288660,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7291212,"byte_end":7291216,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7291749,"byte_end":7291753,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":7301517,"byte_end":7301522,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":7301559,"byte_end":7301564,"line_start":42,"line_end":42,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":7301580,"byte_end":7301585,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":7307153,"byte_end":7307158,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7187299,"byte_end":7187317,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7188491,"byte_end":7188499,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":32544},"to":{"krate":0,"index":41}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190317,"byte_end":7190323,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190367,"byte_end":7190373,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7190389,"byte_end":7190395,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203547,"byte_end":7203553,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7203877,"byte_end":7203883,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":6621}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7204113,"byte_end":7204119,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7204446,"byte_end":7204452,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7204544,"byte_end":7204550,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7204945,"byte_end":7204951,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205054,"byte_end":7205060,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205160,"byte_end":7205166,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7205515,"byte_end":7205521,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206468,"byte_end":7206473,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":132},"to":{"krate":0,"index":128}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7206986,"byte_end":7206991,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209736,"byte_end":7209741,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7209924,"byte_end":7209929,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210204,"byte_end":7210209,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210330,"byte_end":7210335,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210501,"byte_end":7210506,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210665,"byte_end":7210670,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7210760,"byte_end":7210765,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211218,"byte_end":7211223,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1720}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211308,"byte_end":7211313,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1723}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211410,"byte_end":7211415,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211496,"byte_end":7211501,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1957}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7211960,"byte_end":7211966,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212126,"byte_end":7212132,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":2055}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212171,"byte_end":7212177,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":183},"to":{"krate":0,"index":128}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7212429,"byte_end":7212435,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7219768,"byte_end":7219774,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220300,"byte_end":7220306,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220417,"byte_end":7220423,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220477,"byte_end":7220483,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220632,"byte_end":7220638,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1796}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7220770,"byte_end":7220776,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7221060,"byte_end":7221066,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":6621}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":7221213,"byte_end":7221219,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222017,"byte_end":7222026,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222051,"byte_end":7222060,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222070,"byte_end":7222079,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222372,"byte_end":7222381,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222579,"byte_end":7222588,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222712,"byte_end":7222721,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7222895,"byte_end":7222904,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223015,"byte_end":7223026,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223486,"byte_end":7223497,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":7223644,"byte_end":7223655,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":7233591,"byte_end":7233599,"line_start":27,"line_end":27,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":7233719,"byte_end":7233727,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":7237358,"byte_end":7237363,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":7239118,"byte_end":7239129,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7242068,"byte_end":7242073,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256063,"byte_end":7256068,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":7256238,"byte_end":7256243,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7262768,"byte_end":7262771,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7262781,"byte_end":7262784,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7263711,"byte_end":7263714,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7267223,"byte_end":7267226,"line_start":195,"line_end":195,"column_start":15,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7267625,"byte_end":7267628,"line_start":207,"line_end":207,"column_start":21,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7268050,"byte_end":7268059,"line_start":225,"line_end":225,"column_start":22,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7268069,"byte_end":7268078,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7268753,"byte_end":7268759,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7273498,"byte_end":7273503,"line_start":378,"line_end":378,"column_start":6,"column_end":11},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":7282026,"byte_end":7282031,"line_start":598,"line_end":598,"column_start":27,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":412},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7288004,"byte_end":7288009,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7288145,"byte_end":7288150,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7288656,"byte_end":7288660,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7291212,"byte_end":7291216,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":7291749,"byte_end":7291753,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":7301517,"byte_end":7301522,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":7301559,"byte_end":7301564,"line_start":42,"line_end":42,"column_start":31,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":7301580,"byte_end":7301585,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":7307153,"byte_end":7307158,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2266}}]}